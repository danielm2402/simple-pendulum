{"version":3,"sources":["assets/gif-pendulum.gif","components/header/Header.js","pages/landing/Landing.js","pages/platform/animations/AcompladoPendulum.jsx","pages/platform/inputs/Form.jsx","pages/platform/checks/Checks.jsx","pages/platform/blackboard/simple/index.jsx","pages/platform/blackboard/amortiguado/index.jsx","pages/platform/blackboard/forzado/index.jsx","pages/platform/blackboard/acoplado/index.jsx","pages/platform/blackboard/Blackboard.jsx","services/index.js","pages/platform/Platform.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","onClick","document","querySelector","scrollIntoView","behavior","rel","target","Landing","size","color","src","gif","alt","BallAnimation","styled","div","props","y","keyframes","time","SpringAnimation","SimplePendulumAnimation","style","position","height","width","overflow","angle","marginLeft","length","class","mass","display","alignItems","Form","overflowY","paddingBottom","Object","values","configInputs","map","item","checked","label","name","value","data","onChange","e","handleInputs","type","Checks","flexDirection","marginTop","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","handleChecks","gravity","posInitial","const","handleType","Index","Context","input","Node","inputs","response","frecuenciaNatural","frecuencia","periodo","energies","ep","velInitial","ec","et","textAlign","marginBottom","desfase","amplitud","funcAmplitud","gamma","c","ommega","phi","c1","c2","m1","m2","amplitudMaxima","frecuenciaFuerza","delta","contentsBounds","body","getBoundingClientRect","React","useEffect","functionPlot","yAxis","domain","xAxis","grid","fn","a_1","W1","a_2","W2","derivative","updateOnMouseMove","disableZoom","background","constElasticidad","border","backgroundColor","id","Blackboard","responseAmortiguado","responseAcoplados","responseForzado","pendulum","prmLongCuerda","prmGravedad","prmPosIni","prmVelIni","varPhi","varTheta0","varPhi1","varW","Math","sqrt","varT","PI","varF","abs","atan","cos","sin","toFixed","degrees_to_radians","amortiguado","prmMasa","prmB","phi1","gamma_2","pow","varW_2","degrees","isNumber","isFinite","Platform","useState","page","setPage","pageConfig","setPageConfig","setType","setConfigInputs","configInputsAmortiguado","setConfigInputsAmortiguado","fuerzaInicial","configInputsForzado","setConfigInputsForzado","posBlock","configInputsAcoplados","setConfigInputsAcoplados","setResponse","setResponseAmortiguado","setResponseForzado","setResponseAcoplado","responseEnergies","setResponseEnergies","EP","EC","prmF0","prmWf","denominador","forzado","prmPosBlock","prmConstElastic","a","b","W1_2","W2_2","console","log","acoplados","ButtonGroup","Button","variant","theme","createMuiTheme","palette","primary","main","secondary","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9b97c156.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gif-pendulum.46c90860.gif\";","import React from 'react'\nimport './Header.css'\nexport default function Header() {\n    return (\n        <div className=\"container-header\">\n            <div className=\"container-logo\">\n                __Simple Pendulum\n            </div>\n            <div className=\"container-navigation\">\n                <a href=\"#/\" onClick={() => document?.querySelector(`.page-platform`)\n                    .scrollIntoView({ behavior: \"smooth\" })}>Start</a>\n            <a rel=\"noopener noreferrer\" href=\"https://github.com/danielm2402/simple-pendulum\" target=\"_blank\">GitHub</a>\n            <a href=\"#/\">Get to know us</a>\n        </div>\n        </div >\n    )\n}\n","import React from 'react'\nimport './Landing.css'\nimport { FaGithub } from \"react-icons/fa\";\nimport gif from '../../assets/gif-pendulum.gif'\nexport default function Landing() {\n    return (\n        <div className=\"page-landing-page\">\n            <div className=\"container-left-landing-page\">\n                <div className=\"container-title\">\n                    Welcome to your simple pendulum calculator\n                </div>\n                <div className=\"container-resume\">\n                    Ea culpa Lorem nulla proident labore cupidatat commodo reprehenderit veniam.\n                </div>\n                <div className=\"container-help\">\n                    <a rel=\"noopener noreferrer\" href=\"https://github.com/danielm2402/simple-pendulum\" target=\"_blank\" className=\"button-git\">Give me a star <FaGithub size=\"2rem\" color=\"#ffffff\" /></a>\n                </div>\n            </div>\n            <div className=\"container-right-landing-page\">\n                <div className=\"framework-gif\">\n                    <div className=\"container-gif\">\n                        <img src={gif} alt=\"SIMPLE_PENDULUM\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components';\nimport './animation.css'\n\nconst moveVertically = (y) => keyframes`\nfrom {\n    transform: rotate(0deg);\n}\nto {\n    transform: rotate(-${y}deg);\n    \n}\n\n`;\n\nconst moveSpring = (y) => keyframes`\nfrom {\n   \n    width: calc(50% - 50px);\n   \n}\nto {\n    width: calc(50% - ${y}px);\n}\n\n`;\n\n\nconst BallAnimation = styled.div`\n    left: calc(50% - 50px);\n    position: absolute;\n    height: 80%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    transform-origin: top center;\n    animation :${props => moveVertically(props.y)} ${props => props.time}s infinite;\n    animation-direction: alternate-reverse;\n    animation-timing-function: linear;\n`;\n\nconst SpringAnimation = styled.div`\n    position: absolute;\n    height: 80%;\n    width: calc(50% - 50px);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    transform-origin: top center;\n    animation : ${props => moveSpring(props.y)} ${props => props.time}s infinite; \n    animation-direction: alternate-reverse;\n    animation-timing-function: linear;\n    justify-content: flex-end;\n`;\n//animation: mymove 2s infinite;\nexport default function SimplePendulumAnimation(props) {\n    return (\n        <div style={{ position: 'relative', height: '100%', width: '100%' }}>\n            <div style={{ position: 'absolute', width: '100%', height: '100%', overflow: 'hidden' }} >\n                <BallAnimation y={props.angle} time={props.time}>\n                    <div className=\"pendulum\" >\n                        <h5 style={{ marginLeft: 4 }}>{props.length}m</h5>\n                    </div>\n                    <section class=\"stage\">\n                        <figure class=\"ball\"><span class=\"shadow\">{props.mass}</span></figure>\n\n                    </section>\n                </BallAnimation>\n                <SpringAnimation y={props.angle} time={props.time}>\n                    \n                    <div style={{ display: 'flex', width: '100%', alignItems: 'center' }}>\n                        <div className=\"spring-1\">\n                            <div className=\"bar-initial\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar-initial\"></div>\n\n                        </div>\n                        <div className=\"block\">\n\n                        </div>\n                        <div className=\"spring-2\">\n                            <div className=\"bar-initial\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar-initial\"></div>\n\n                        </div>\n                    </div>\n                  \n                </SpringAnimation>\n            </div>\n            <div style={{ position: 'absolute', width: '100%', height: '100%', overflow: 'hidden' }} >\n                <div className=\"protactor-angular\">\n                    <div className=\"chart chart1\">\n                        <span class=\"char1\">|</span>\n\n                    </div>\n                    <div className=\"chart chart2\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">80</span>\n                    </div>\n                    <div className=\"chart chart3\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">70</span>\n                    </div>\n                    <div className=\"chart chart4\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">60</span>\n                    </div>\n                    <div className=\"chart chart5\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">50</span>\n                    </div>\n                    <div className=\"chart chart6\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">40</span>\n                    </div>\n                    <div className=\"chart chart7\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">30</span>\n                    </div>\n                    <div className=\"chart chart8\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">20</span>\n                    </div>\n                    <div className=\"chart chart9\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">10</span>\n                    </div>\n                    <div className=\"chart chart10\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">0</span>\n                    </div>\n                    <div className=\"chart chart11\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">10</span>\n                    </div>\n                    <div className=\"chart chart12\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">20</span>\n                    </div>\n                    <div className=\"chart chart13\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">30</span>\n                    </div>\n                    <div className=\"chart chart14\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">40</span>\n                    </div>\n                    <div className=\"chart chart15\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">50</span>\n                    </div>\n                    <div className=\"chart chart16\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">60</span>\n                    </div>\n                    <div className=\"chart chart17\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">70</span>\n                    </div>\n                    <div className=\"chart chart18\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">80</span>\n                    </div>\n                    <div className=\"chart chart19\">\n                        <span class=\"char1\">|</span>\n\n                    </div>\n                </div>\n                <div className=\"subprotactor-angular\">\n\n                </div>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport './Form.css'\nexport default function Form(props) {\n    return (\n        <div className=\"container-form\">\n            <div style={{ overflowY:'scroll', paddingBottom:20}}>\n                {Object.values(props.configInputs).map(item => {\n                    if (item.checked) {\n                        return <div className=\"item-form\">\n                            <h6>{item.label}</h6>\n                            <input name={item.name} value={item.data} onChange={(e) => props.handleInputs(e.target.name, e.target.value)} type=\"number\" />\n                        </div>\n                    }\n                    return <></>\n                })}\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { FormGroup, FormControlLabel, Checkbox, FormLabel } from '@material-ui/core'\nimport './Checks.css'\nexport default function Checks(props) {\n    return (\n        <div style={{ width: '100%', height: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n            <div className=\"container-check\" style={{ marginTop: '2.33em' }}>\n                <FormLabel component=\"legend\">Campos de entrada</FormLabel>\n            </div>\n            <div className=\"container-check\">\n                {props.type=='simple'?\n                <FormGroup>\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.length.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"length\" />}\n                        label={<span className=\"check-title\">Longitud de la cuerda</span>}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.gravity.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"gravity\" />}\n                        label={<span className=\"check-title\">Gravedad</span>}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.posInitial.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"posInitial\" />}\n                        label={<span className=\"check-title\">Posición inicial</span>}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.mass.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"mass\" />}\n                        label={<span className=\"check-title\">Masa</span>}\n                    />\n                </FormGroup>\n                :props.type=='amortiguado'?\n                <FormGroup>\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.length.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"length\" />}\n                        label={<span className=\"check-title\">Longitud de la cuerda</span>}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.gravity.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"gravity\" />}\n                        label={<span className=\"check-title\">Gravedad</span>}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.posInitial.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"posInitial\" />}\n                        label={<span className=\"check-title\">Posición inicial</span>}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.mass.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"mass\" />}\n                        label={<span className=\"check-title\">Masa</span>}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.const.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"mass\" />}\n                        label={<span className=\"check-title\">Constante de amortiguamiento</span>}\n                    />\n                </FormGroup>\n                :<></>}\n            </div>\n            <div>\n                <select onChange={(e)=>props.handleType(e.target.value)} value={props.type}>\n                    <option value=\"simple\"> Simple</option>\n                    <option value=\"amortiguado\"> Amortiguado</option>\n                    <option value=\"forzado\"> Forzado</option>\n                </select>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport MathJax from 'react-mathjax2'\nimport '../Blackboard.css'\nexport default function Index(props) {\n    return (\n        <div className=\"container-solution\" >\n              <div className=\"left-solution\">\n                <div className=\"title\">\n                    <h4>Frecuencia natural de vibracion (Wo):</h4>\n                </div>\n                <div className=\"ecuation\">\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'W_o=sqrt (frac{g}{l})'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'W_o=sqrt (frac{' + props.inputs.gravity.data + '}{' + props.inputs.length.data + '})'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'W_o=' + props.response.frecuenciaNatural+'frac{rad}{s}'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                </div>\n                <div className=\"title\">\n                    <h4>Frecuencia (f):</h4>\n                </div>\n                <div className=\"ecuation\">\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'f=frac{W_o}{2\\\\pi}'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'f=frac{' + props.response.frecuenciaNatural + '}{2\\\\pi}'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'f=' + props.response.frecuencia+'hz'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                </div>\n\n                <div className=\"title\">\n                    <h4>Periodo (T):</h4>\n                </div>\n                <div className=\"ecuation\">\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'T=2pisqrt(frac{l}{g})'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'T=2pisqrt(frac{' + props.inputs.length.data + '}{' + props.inputs.gravity.data + '})'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'T=' + props.response.periodo+'s'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                </div>\n                {props.inputs.mass.checked ?\n                    <>\n                        <div className=\"title\">\n                            <h4>Energía potencial (EP):</h4>\n                        </div>\n                        <div className=\"ecuation\">\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{'EP= m*g*l(frac{θ^2}{2})'}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`EP= ${props.inputs.mass.data}*${props.inputs.gravity.data}*${props.inputs.length.data}(frac{${props.inputs.posInitial.data}^2}{2})`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`EP= ${props.energies.ep} J`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                        </div>\n                        <div className=\"title\">\n                            <h4>Energía cinética (EC):</h4>\n                        </div>\n                        <div className=\"ecuation\">\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{'EC= frac{1}{2}*m*l^2*θ^2'}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`EC= frac{1}{2}*${props.inputs.mass.data}*${props.inputs.length.data}^2*${props.inputs.velInitial.data}^2`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`EC= ${props.energies.ec} J`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                        </div>\n\n                        <div className=\"title\">\n                            <h4>Energía total</h4>\n                        </div>\n                        <div className=\"ecuation\">\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{'E= EP + EC'}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`E= ${props.energies.ep} + ${props.energies.ec}`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`E= ${props.energies.et} J`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                        </div>\n\n                    </>\n                    : <></>}\n            </div>\n            <div className=\"right-solution\">\n                <div className=\"title\">\n                    <div className=\"title\">\n                        <h4>Ecuación de movimiento:</h4>\n                    </div>\n                    <div className=\"ecuation\">\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'θ(t)=θ_0 Cos(W_0t+\\\\varphi)'}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>[1] Evaluar las condiciones iniciales en t=0 </h5>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'θ(0)=θ_0 Cos(W_0t+\\\\varphi)=' + props.inputs.posInitial.data}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'θ(0)=θ_0 Cos(varphi)=' + props.inputs.posInitial.data}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>[2] Evaluar las condiciones iniciales en t=0</h5>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'frac{dθ(0)}{dt}= -W_o θ_0 Sen(W_ot + \\\\varphi) =' + props.inputs.velInitial.data}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'frac{dθ(0)}{dt}= -W_o θ_0 Sen(\\\\varphi) =' + props.inputs.velInitial.data}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Dividimos [2] entre [1] y despejamos para hallar Phi</h5>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'frac{-W_o θ_0 Sen(\\\\varphi)}{θ_0 Cos(\\\\varphi)} =' +'frac{'+ props.inputs.velInitial.data+'}{'+props.inputs.posInitial.data+'}'}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'\\\\varphi=arctan(frac{' + props.inputs.velInitial.data + '}{-' + props.response.frecuenciaNatural+'* '+  props.inputs.posInitial.data + '})'}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'\\\\varphi=' + props.response.desfase}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Hallamos el valor de la amplitud</h5>\n                        {props.inputs.posInitial.data==0?\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{`θ_0= frac{${props.inputs.velInitial.data}}{${-props.response.frecuenciaNatural}*Sen(${props.response.desfase})}`}</MathJax.Node>\n                                <MathJax.Node >{`θ_0=${props.response.amplitud} rad`}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>:\n                        <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{`θ_0= frac{${props.inputs.posInitial.data}}{${props.response.funcAmplitud==='cos'?'Cos':'Sen'}(${ props.response.desfase})}`}</MathJax.Node>\n                            <MathJax.Node >{`θ_0=${props.response.amplitud} rad`}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                        }\n                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>La ecuación que describe el movimiento del pendulo es:</h5>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'θ(t)=' + props.response.amplitud + '*Cos(' + props.response.frecuenciaNatural + ' t+' + props.response.desfase + ')'}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                    </div>\n                </div>\n            </div>\n         \n            \n        </div>\n    )\n}\n","import React from 'react'\nimport MathJax from 'react-mathjax2'\nimport '../Blackboard.css'\nexport default function Index(props) {\n    return (\n        <div className=\"container-solution\" >\n            <div className=\"left-solution\">\n                <div className=\"title\">\n                    <h4>Frecuencia natural de vibracion (Wo):</h4>\n                </div>\n                <div className=\"ecuation\">\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'W_o=sqrt (frac{g}{l})'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'W_o=sqrt (frac{' + props.inputs.gravity.data + '}{' + props.inputs.length.data + '})'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'W_o=' + props.response.frecuenciaNatural + 'frac{rad}{s}'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                </div>\n                <div className=\"title\">\n                    <h4>Frecuencia (f):</h4>\n                </div>\n                <div className=\"ecuation\">\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'f=frac{W_o}{2\\\\pi}'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'f=frac{' + props.response.frecuenciaNatural + '}{2\\\\pi}'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'f=' + props.response.frecuencia + 'hz'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                </div>\n                <div className=\"title\">\n                    <h4>Gamma:</h4>\n                </div>\n                <div className=\"ecuation\">\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'\\gamma=frac{b}{2*m}'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{`\\gamma=frac{${props.inputs.const.data}}{2*${props.inputs.mass.data}}`}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{`\\gamma=${props.response.gamma}`}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                </div>\n\n            </div>\n            <div className=\"right-solution\">\n                <div className=\"title\">\n                    <div className=\"title\">\n                        <h4>Ecuación de movimiento:</h4>\n                    </div>\n\n                    <div className=\"ecuation\">\n                        {props.response.type === 'subamortiguado' ?\n                            <div>\n                            <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Comparando Gamma con Frecuencia natural, como:</h5>\n                            <div className=\"ecuation\">\n                                <MathJax.Context input='ascii'>\n                                    <div>\n                                        <MathJax.Node >{'\\gamma^2 < W_0^2'}</MathJax.Node>\n                                    </div>\n                                </MathJax.Context>\n                                <MathJax.Context input='ascii'>\n                                    <div>\n                                        <MathJax.Node >{`${props.response.gamma}^2 < ${props.response.frecuenciaNatural}^2`}</MathJax.Node>\n                                    </div>\n                                </MathJax.Context>\n                            </div>\n                            <h5 style={{ color: '#234f4f', textAlign: 'left', marginTop: 20 }}>Al ser gamma menor que la frecuencia natural</h5>\n                            <h5 style={{ color: '#234f4f', textAlign: 'left',  marginBottom: 20}}> es un sistema subamortiguado, por lo tanto su ecuación está dada por: </h5>\n                            <div className=\"ecuation\">\n                                <MathJax.Context input='ascii'>\n                                    <div>\n                                        <MathJax.Node >{'θ(t)=c*e^(-\\gamma*t)* Cos (W*t+\\phi)'}</MathJax.Node>\n                                    </div>\n                                </MathJax.Context>\n                                <MathJax.Context input='ascii'>\n                                    <div>\n                                    <MathJax.Node >{`θ(t)=${props.response.c}*e^(-${props.response.gamma}*t)* Cos (${props.response.ommega}*t+${props.response.phi})`}</MathJax.Node>\n                                    </div>\n                                </MathJax.Context>\n\n                            </div>\n                        </div>\n                            : props.response.type === 'amortiguado' ?\n                                <div>\n                                    <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Comparando Gamma con Frecuencia natural, como:</h5>\n                                    <div className=\"ecuation\">\n                                        <MathJax.Context input='ascii'>\n                                            <div>\n                                                <MathJax.Node >{'\\gamma^2 = W_0^2'}</MathJax.Node>\n                                            </div>\n                                        </MathJax.Context>\n                                        <MathJax.Context input='ascii'>\n                                            <div>\n                                                <MathJax.Node >{`${props.response.gamma}^2 = ${props.response.frecuenciaNatural}^2`}</MathJax.Node>\n                                            </div>\n                                        </MathJax.Context>\n                                    </div>\n                                    <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Al ser iguales, es un sistema criticamente amortiguado, por lo tanto su ecuación está dada por: </h5>\n                                    <div className=\"ecuation\">\n                                        <MathJax.Context input='ascii'>\n                                            <div>\n                                                <MathJax.Node >{'θ(t)=(c1+c2*t)e^(-\\gamma*t)'}</MathJax.Node>\n                                            </div>\n                                        </MathJax.Context>\n                                        <MathJax.Context input='ascii'>\n                                            <div>\n                                                <MathJax.Node >{`θ(t)=(${props.response.c1}+${props.response.c2}*t)e^(-${props.response.gamma}*t)`}</MathJax.Node>\n                                            </div>\n                                        </MathJax.Context>\n\n                                    </div>\n                                </div>\n                                :\n                                <div>\n                                <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Comparando Gamma con Frecuencia natural, como:</h5>\n                                <div className=\"ecuation\">\n                                    <MathJax.Context input='ascii'>\n                                        <div>\n                                            <MathJax.Node >{'\\gamma^2 > W_0^2'}</MathJax.Node>\n                                        </div>\n                                    </MathJax.Context>\n                                    <MathJax.Context input='ascii'>\n                                        <div>\n                                            <MathJax.Node >{`${props.response.gamma}^2 > ${props.response.frecuenciaNatural}^2`}</MathJax.Node>\n                                        </div>\n                                    </MathJax.Context>\n                                </div>\n                                <h5 style={{ color: '#234f4f', textAlign: 'left', marginTop: 20 }}>Al ser gamma mayor que la frecuencia natural</h5>\n                                <h5 style={{ color: '#234f4f', textAlign: 'left',  marginBottom: 20}}> es un sistema sobreamortiguado, por lo tanto su ecuación está dada por: </h5>\n                                <div className=\"ecuation\">\n                                    <MathJax.Context input='ascii'>\n                                        <div>\n                                            <MathJax.Node >{'θ(t)=c_1*e^(m_1*t)+ c_2*e^(m_2*t)'}</MathJax.Node>\n                                        </div>\n                                    </MathJax.Context>\n                                    <MathJax.Context input='ascii'>\n                                        <div>\n                                        <MathJax.Node >{`θ(t)=${props.response.c1}*e^(${props.response.m1}*t)+ ${props.response.c2}*e^(${props.response.m2}*t)`}</MathJax.Node>\n                                        </div>\n                                    </MathJax.Context>\n    \n                                </div>\n                            </div>}\n                        {/*  <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'θ(t)=θ_0 Cos(W_0t+\\\\varphi)'}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>[1] Evaluar las condiciones iniciales en t=0 </h5>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'θ(0)=θ_0 Cos(W_0t+\\\\varphi)=' + props.inputs.posInitial.data}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'θ(0)=θ_0 Cos(varphi)=' + props.inputs.posInitial.data}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>[2] Evaluar las condiciones iniciales en t=0</h5>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'frac{dθ(0)}{dt}= -W_o θ_0 Sen(W_ot + \\\\varphi) =' + props.inputs.velInitial.data}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'frac{dθ(0)}{dt}= -W_o θ_0 Sen(\\\\varphi) =' + props.inputs.velInitial.data}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Dividimos [2] entre [1] y despejamos para hallar Phi</h5>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'frac{-W_o θ_0 Sen(\\\\varphi)}{θ_0 Cos(\\\\varphi)} =' + props.inputs.velInitial.data}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'\\\\varphi=arctan(frac{' + props.inputs.velInitial.data + '}{-' + props.response.frecuenciaNatural+'* '+  props.inputs.posInitial.data + '})'}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'\\\\varphi=' + props.response.desfase}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Hallamos el valor de la amplitud</h5>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{`θ_0= frac{${props.inputs.posInitial.data}}{${props.response.funcAmplitud==='cos'?'Cos':'Sen'}(${ props.response.desfase})}`}</MathJax.Node>\n                                <MathJax.Node >{`θ_0=${props.response.amplitud} rad`}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>La ecuación que describe el movimiento del pendulo es:</h5>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'θ(t)=' + props.response.amplitud + '*Cos(' + props.response.frecuenciaNatural + ' t+' + props.response.desfase + ')'}</MathJax.Node>\n                            </div>\n                        </MathJax.Context> */}\n                    </div>\n                </div>\n            </div>\n\n\n        </div>\n    )\n}\n","import React from 'react'\nimport MathJax from 'react-mathjax2'\nimport '../Blackboard.css'\nexport default function Index(props) {\n    return (\n        <div style={{ width:'100%', height:'100%',overflowY:'auto'}}>\n            {props.response.label === 'simple' ?\n                <div className=\"container-solution\" >\n                <div className=\"left-solution\">\n                  <div className=\"title\">\n                      <h4>Frecuencia natural de vibracion (Wo):</h4>\n                  </div>\n                  <div className=\"ecuation\">\n                      <MathJax.Context input='ascii'>\n                          <div>\n                              <MathJax.Node >{'W_o=sqrt (frac{g}{l})'}</MathJax.Node>\n                          </div>\n                      </MathJax.Context>\n                      <MathJax.Context input='ascii'>\n                          <div>\n                              <MathJax.Node >{'W_o=sqrt (frac{' + props.inputs.gravity.data + '}{' + props.inputs.length.data + '})'}</MathJax.Node>\n                          </div>\n                      </MathJax.Context>\n                      <MathJax.Context input='ascii'>\n                          <div>\n                              <MathJax.Node >{'W_o=' + props.response.frecuenciaNatural+'frac{rad}{s}'}</MathJax.Node>\n                          </div>\n                      </MathJax.Context>\n                  </div>\n                  <div className=\"title\">\n                      <h4>Frecuencia (f):</h4>\n                  </div>\n                  <div className=\"ecuation\">\n                      <MathJax.Context input='ascii'>\n                          <div>\n                              <MathJax.Node >{'f=frac{W_o}{2\\\\pi}'}</MathJax.Node>\n                          </div>\n                      </MathJax.Context>\n                      <MathJax.Context input='ascii'>\n                          <div>\n                              <MathJax.Node >{'f=frac{' + props.response.frecuenciaNatural + '}{2\\\\pi}'}</MathJax.Node>\n                          </div>\n                      </MathJax.Context>\n                      <MathJax.Context input='ascii'>\n                          <div>\n                              <MathJax.Node >{'f=' + props.response.frecuencia+'hz'}</MathJax.Node>\n                          </div>\n                      </MathJax.Context>\n                  </div>\n  \n                  <div className=\"title\">\n                      <h4>Periodo (T):</h4>\n                  </div>\n                  <div className=\"ecuation\">\n                      <MathJax.Context input='ascii'>\n                          <div>\n                              <MathJax.Node >{'T=2pisqrt(frac{l}{g})'}</MathJax.Node>\n                          </div>\n                      </MathJax.Context>\n                      <MathJax.Context input='ascii'>\n                          <div>\n                              <MathJax.Node >{'T=2pisqrt(frac{' + props.inputs.length.data + '}{' + props.inputs.gravity.data + '})'}</MathJax.Node>\n                          </div>\n                      </MathJax.Context>\n                      <MathJax.Context input='ascii'>\n                          <div>\n                              <MathJax.Node >{'T=' + props.response.periodo+'s'}</MathJax.Node>\n                          </div>\n                      </MathJax.Context>\n                  </div>\n              </div>\n              <div className=\"right-solution\">\n                  <div className=\"title\">\n                      <div className=\"title\">\n                          <h4>Ecuación de movimiento:</h4>\n                      </div>\n                      <div className=\"ecuation\">\n                          <MathJax.Context input='ascii'>\n                              <div>\n                                  <MathJax.Node >{'\\\\varphi=arctan(frac{' + props.inputs.velInitial.data + '}{-' + props.response.frecuenciaNatural+'* '+  props.inputs.posInitial.data + '})'}</MathJax.Node>\n                              </div>\n                          </MathJax.Context>\n                          <MathJax.Context input='ascii'>\n                              <div>\n                                  <MathJax.Node >{'\\\\varphi=' + props.response.desfase}</MathJax.Node>\n                              </div>\n                          </MathJax.Context>\n                          <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Hallamos el valor de la amplitud</h5>\n                          {props.inputs.posInitial.data==0?\n                          <MathJax.Context input='ascii'>\n                              <div>\n                                  <MathJax.Node >{`θ_0= frac{${props.inputs.velInitial.data}}{${-props.response.frecuenciaNatural}*Sen(${props.response.desfase})}`}</MathJax.Node>\n                                  <MathJax.Node >{`θ_0=${props.response.amplitud} rad`}</MathJax.Node>\n                              </div>\n                          </MathJax.Context>:\n                          <MathJax.Context input='ascii'>\n                          <div>\n                              <MathJax.Node >{`θ_0= frac{${props.inputs.posInitial.data}}{${props.response.funcAmplitud==='cos'?'Cos':'Sen'}(${ props.response.desfase})}`}</MathJax.Node>\n                              <MathJax.Node >{`θ_0=${props.response.amplitud} rad`}</MathJax.Node>\n                          </div>\n                      </MathJax.Context>\n                          }\n                          <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>La ecuación que describe el movimiento del pendulo es:</h5>\n                          <MathJax.Context input='ascii'>\n                              <div>\n                                  <MathJax.Node >{'θ(t)=' + props.response.amplitud + '*Cos(' + props.response.frecuenciaNatural + ' t+' + props.response.desfase + ')+'+props.response.amplitudMaxima+'*Cos ('+props.inputs.frecuenciaFuerza.data+'*t -'+props.response.delta+')'}</MathJax.Node>\n                              </div>\n                          </MathJax.Context>\n                      </div>\n                  </div>\n              </div>\n           \n          </div>\n      \n                :\n                <div className=\"container-solution\" >\n                    <div className=\"left-solution\">\n                        <div className=\"title\">\n                            <h4>Frecuencia natural de vibracion (Wo):</h4>\n                        </div>\n                        <div className=\"ecuation\">\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{'W_o=sqrt (frac{g}{l})'}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{'W_o=sqrt (frac{' + props.inputs.gravity.data + '}{' + props.inputs.length.data + '})'}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{'W_o=' + props.response.frecuenciaNatural + 'frac{rad}{s}'}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                        </div>\n                        <div className=\"title\">\n                            <h4>Frecuencia (f):</h4>\n                        </div>\n                        <div className=\"ecuation\">\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{'f=frac{W_o}{2\\\\pi}'}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{'f=frac{' + props.response.frecuenciaNatural + '}{2\\\\pi}'}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{'f=' + props.response.frecuencia + 'hz'}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                        </div>\n                        <div className=\"title\">\n                            <h4>Gamma:</h4>\n                        </div>\n                        <div className=\"ecuation\">\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{'\\gamma=frac{b}{2*m}'}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`\\gamma=frac{${props.inputs.const.data}}{2*${props.inputs.mass.data}}`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`\\gamma=${props.response.gamma}`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                        </div>\n\n                    </div>\n                    <div className=\"right-solution\">\n                        <div className=\"title\">\n                            <div className=\"title\">\n                                <h4>Ecuación de movimiento:</h4>\n                            </div>\n\n                            <div className=\"ecuation\">\n                                {props.response.type === 'subamortiguado' ?\n                                    <div>\n                                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Comparando Gamma con Frecuencia natural, como:</h5>\n                                        <div className=\"ecuation\">\n                                            <MathJax.Context input='ascii'>\n                                                <div>\n                                                    <MathJax.Node >{'\\gamma^2 < W_0^2'}</MathJax.Node>\n                                                </div>\n                                            </MathJax.Context>\n                                            <MathJax.Context input='ascii'>\n                                                <div>\n                                                    <MathJax.Node >{`${props.response.gamma}^2 < ${props.response.frecuenciaNatural}^2`}</MathJax.Node>\n                                                </div>\n                                            </MathJax.Context>\n                                        </div>\n                                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginTop: 20 }}>Al ser gamma menor que la frecuencia natural</h5>\n                                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}> es un sistema subamortiguado, por lo tanto su ecuación está dada por: </h5>\n                                        <div className=\"ecuation\">\n                                            <MathJax.Context input='ascii'>\n                                                <div>\n                                                    <MathJax.Node >{'θ(t)=c*e^(-\\gamma*t)* Cos (W*t+\\phi)'}</MathJax.Node>\n                                                </div>\n                                            </MathJax.Context>\n                                            <MathJax.Context input='ascii'>\n                                                <div>\n                                                    <MathJax.Node >{`θ(t)=${props.response.c}*e^(-${props.response.gamma}*t)* Cos (${props.response.ommega}*t+${props.response.phi})`}</MathJax.Node>\n                                                </div>\n                                            </MathJax.Context>\n\n                                        </div>\n                                    </div>\n                                    : props.response.type === 'amortiguado' ?\n                                        <div>\n                                            <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Comparando Gamma con Frecuencia natural, como:</h5>\n                                            <div className=\"ecuation\">\n                                                <MathJax.Context input='ascii'>\n                                                    <div>\n                                                        <MathJax.Node >{'\\gamma^2 = W_0^2'}</MathJax.Node>\n                                                    </div>\n                                                </MathJax.Context>\n                                                <MathJax.Context input='ascii'>\n                                                    <div>\n                                                        <MathJax.Node >{`${props.response.gamma}^2 = ${props.response.frecuenciaNatural}^2`}</MathJax.Node>\n                                                    </div>\n                                                </MathJax.Context>\n                                            </div>\n                                            <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Al ser iguales, es un sistema criticamente amortiguado, por lo tanto su ecuación está dada por: </h5>\n                                            <div className=\"ecuation\">\n                                                <MathJax.Context input='ascii'>\n                                                    <div>\n                                                        <MathJax.Node >{'θ(t)=(c1+c2*t)e^(-\\gamma*t)'}</MathJax.Node>\n                                                    </div>\n                                                </MathJax.Context>\n                                                <MathJax.Context input='ascii'>\n                                                    <div>\n                                                        <MathJax.Node >{`θ(t)=(${props.response.c1}+${props.response.c2}*t)e^(-${props.response.gamma}*t)`}</MathJax.Node>\n                                                    </div>\n                                                </MathJax.Context>\n\n                                            </div>\n                                        </div>\n                                        :\n                                        <div>\n                                            <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Comparando Gamma con Frecuencia natural, como:</h5>\n                                            <div className=\"ecuation\">\n                                                <MathJax.Context input='ascii'>\n                                                    <div>\n                                                        <MathJax.Node >{'\\gamma^2 > W_0^2'}</MathJax.Node>\n                                                    </div>\n                                                </MathJax.Context>\n                                                <MathJax.Context input='ascii'>\n                                                    <div>\n                                                        <MathJax.Node >{`${props.response.gamma}^2 > ${props.response.frecuenciaNatural}^2`}</MathJax.Node>\n                                                    </div>\n                                                </MathJax.Context>\n                                            </div>\n                                            <h5 style={{ color: '#234f4f', textAlign: 'left', marginTop: 20 }}>Al ser gamma mayor que la frecuencia natural</h5>\n                                            <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}> es un sistema sobreamortiguado, por lo tanto su ecuación está dada por: </h5>\n                                            <div className=\"ecuation\">\n                                                <MathJax.Context input='ascii'>\n                                                    <div>\n                                                        <MathJax.Node >{'θ(t)=c_1*e^(m_1*t)+ c_2*e^(m_2*t)'}</MathJax.Node>\n                                                    </div>\n                                                </MathJax.Context>\n                                                <MathJax.Context input='ascii'>\n                                                    <div>\n                                                        <MathJax.Node >{`θ(t)=${props.response.c1}*e^(${props.response.m1}*t)+ ${props.response.c2}*e^(${props.response.m2}*t)`}</MathJax.Node>\n                                                    </div>\n                                                </MathJax.Context>\n\n                                            </div>\n                                        </div>}\n                                <div className=\"title\">\n                                    <h4>Valor de la amplitud máxima</h4>\n                                </div>\n                                <div className=\"ecuation\">\n                                    <MathJax.Context input='ascii'>\n                                        <div>\n                                            <MathJax.Node >{`D = ${props.response.amplitudMaxima}`}</MathJax.Node>\n                                        </div>\n                                    </MathJax.Context>\n                                </div>\n                                <div className=\"title\">\n                                    <h4>Valor del angulo de desfase</h4>\n                                </div>\n                                <div className=\"ecuation\">\n                                    <MathJax.Context input='ascii'>\n                                        <div>\n                                            <MathJax.Node >{`\\delta= ${props.response.delta}`}</MathJax.Node>\n                                        </div>\n                                    </MathJax.Context>\n                                </div>\n                                <div className=\"title\">\n                                    <h4>Solución Total</h4>\n                                </div>\n                                <div className=\"ecuation\">\n                                    {props.response.type === 'subamortiguado' ?\n                                        <div>\n\n                                            <div className=\"ecuation\">\n                                                <MathJax.Context input='ascii'>\n                                                    <div>\n                                                        <MathJax.Node >{`θ(t)=${props.response.c}*e^(-${props.response.gamma}*t)* Cos (${props.response.ommega}*t+${props.response.phi}) +${props.response.amplitudMaxima}*Cos(${props.inputs.frecuenciaFuerza.data}*t - ${props.response.delta})`}</MathJax.Node>\n                                                    </div>\n                                                </MathJax.Context>\n\n                                            </div>\n                                        </div>\n                                        : props.response.type === 'amortiguado' ?\n                                            <div>\n\n                                                <div className=\"ecuation\">\n                                                    <MathJax.Context input='ascii'>\n                                                        <div>\n                                                            <MathJax.Node >{`θ(t)=(${props.response.c1}+${props.response.c2}*t)e^(-${props.response.gamma}*t)+${props.response.amplitudMaxima}*Cos(${props.inputs.frecuenciaFuerza.data}*t - ${props.response.delta})`}</MathJax.Node>\n                                                        </div>\n                                                    </MathJax.Context>\n\n                                                </div>\n                                            </div>\n                                            :\n                                            <div>\n                                                <div className=\"ecuation\">\n\n                                                    <MathJax.Context input='ascii'>\n                                                        <div>\n                                                            <MathJax.Node >{`θ(t)=${props.response.c1}*e^(${props.response.m1}*t)+ ${props.response.c2}*e^(${props.response.m2}*t)+${props.response.amplitudMaxima}*Cos(${props.inputs.frecuenciaFuerza.data}*t - ${props.response.delta})`}</MathJax.Node>\n                                                        </div>\n                                                    </MathJax.Context>\n\n                                                </div>\n                                            </div>}\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n\n                </div>\n            }\n        </div>\n    )\n}\n","import React from 'react'\nimport MathJax from 'react-mathjax2'\nimport '../Blackboard.css'\nimport functionPlot, { } from \"function-plot\";\n\nlet contentsBounds = document.body.getBoundingClientRect();\nlet width = 800;\nlet height = 500;\nlet ratio = contentsBounds.width / width;\n\n\n\n\nexport default function Index(props) {\n    React.useEffect(() => {\n        functionPlot({\n            target: \"#graph\",\n            width,\n            height,\n            yAxis: { domain: [-2, 2] },\n            xAxis: { domain: [0, 10] },\n            grid: true,\n            data: [\n                {\n                    fn: props.response.type===\"PRIMERO\"?`${props.response.a_1} * cos (${props.response.W1}*x)`:props.response.type===\"SEGUNDO\"?`${props.response.a_2} * cos (${props.response.W2} * x)`:props.response.type===\"COMBINADO\"?`${props.response.a_1} * cos(${props.response.W1}*x) +${props.response.a_2}* cos (${props.response.W2} * x)`:'0',\n                    derivative: {\n                        fn: \"2 * x\",\n                        updateOnMouseMove: true\n                    }\n                }\n            ],\n            disableZoom: false\n        });\n        functionPlot({\n            target: \"#graph2\",\n            width,\n            height,\n            yAxis: { domain: [-2, 2] },\n            xAxis: { domain: [0, 10] },\n            grid: true,\n            data: [\n                {\n                    fn: props.response.type===\"PRIMERO\"?`${props.response.a_1} * cos (${props.response.W1} * x)`:props.response.type===\"SEGUNDO\"?`- ${props.response.a_2} * cos (${props.response.W2} * x)`:props.response.type===\"COMBINADO\"?`${props.response.a_1} * cos(${props.response.W1}*x) - ${props.response.a_2} * cos (${props.response.W2} * x)`:'0',\n                    derivative: {\n                        fn: \"2 * x\",\n                        updateOnMouseMove: true\n                    }\n                }\n            ],\n            disableZoom: false\n        });\n    },[props.response])\n    return (\n        <div style={{\n            width: '100%', height: '100%', overflowY: 'auto',\n        }}>\n            <div className=\"container-solution\" >\n                <div style={{ paddingBottom:20, display: 'flex',  background: 'url(https://images.creativemarket.com/0.1.0/ps/8034524/300/200/m2/fpc/wm0/vccqltmjbp24stdhk3pftpqhf3d4ok8sy9tiaen3mca8oqvuoj4cbuwtuqa1026w-.jpg?1585512940&s=bf209619031b2f991787df522ff68b3d)' }}>\n                    <div className=\"left-solution\">\n                        <div className=\"title\">\n                            <h4>Frecuencia 1</h4>\n                        </div>\n                        <div className=\"ecuation\">\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`W_1^2 = frac{3*k}{2*m}+ frac{g}{l}+frac{1}{2}sqrt(frac{5*h^2}{m^2} + frac{2*g*k}{l*m})`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`W_1^2 = frac{3*${props.inputs.constElasticidad.data}}{2*${props.inputs.mass.data}}+ frac{${props.inputs.gravity.data}}{${props.inputs.length.data}}+frac{1}{2}sqrt(frac{5*${props.inputs.constElasticidad.data}^2}{${props.inputs.mass.data}^2} + frac{2*${props.inputs.gravity.data}*${props.inputs.constElasticidad.data}}{${props.inputs.length.data}*${props.inputs.mass.data}})`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{'W_1=' + props.response.W1 + 'frac{rad}{s}'}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                        </div>\n                        <div className=\"title\">\n                            <h4>Frecuencia 2</h4>\n                        </div>\n                        <div className=\"ecuation\">\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`W_2^2 = frac{3*k}{2*m}- frac{1}{2}*sqrt(frac{5*h^2}{m^2} + frac{2*g*k}{l*m})`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`W_2^2= frac{3*${props.inputs.constElasticidad.data}}{2*${props.inputs.mass.data}}+ frac{${props.inputs.gravity.data}}{${props.inputs.length.data}}+frac{1}{2}sqrt(frac{5*${props.inputs.constElasticidad.data}^2}{${props.inputs.mass.data}^2} + frac{2*${props.inputs.gravity.data}*${props.inputs.constElasticidad.data}}{${props.inputs.length.data}*${props.inputs.mass.data}})`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{'W_2=' + props.response.W2 + 'frac{rad}{s}'}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                        </div>\n                    </div>\n                    <div className=\"right-solution\">\n                        <div className=\"title\">\n                            <div className=\"title\">\n                                <h4>Ecuación de movimiento:</h4>\n                            </div>\n                        </div>\n                        {props.response.type == 'PRIMERO' ?\n                            <div className=\"ecuation\">\n                                <MathJax.Context input='ascii'>\n                                    <div>\n                                        <MathJax.Node >{`\\\\Psi_a(t)= A_1 * Cos (W_1*t)`}</MathJax.Node>\n                                    </div>\n                                </MathJax.Context>\n                                <MathJax.Context input='ascii'>\n                                    <div>\n                                        <MathJax.Node >{`\\\\Psi_a(t)= ${props.response.a_1} * Cos (${props.response.W1}*t)`}</MathJax.Node>\n\n                                    </div>\n                                </MathJax.Context>\n\n                                <MathJax.Context input='ascii'>\n                                    <div>\n                                        <MathJax.Node >{`\\\\Psi_b(t)= A_1 * Cos (W_1*t)`}</MathJax.Node>\n                                    </div>\n\n                                </MathJax.Context>\n                                <MathJax.Context input='ascii'>\n                                    <div>\n                                        <MathJax.Node >{`\\\\Psi_b(t)= ${props.response.a_1} * Cos (${props.response.W1}*t)`}</MathJax.Node>\n\n                                    </div>\n\n                                </MathJax.Context>\n\n                            </div> : props.response.type == 'SEGUNDO' ?\n                                <div className=\"ecuation\">\n                                    <MathJax.Context input='ascii'>\n                                        <div>\n                                            <MathJax.Node >{`\\\\Psi_a(t)= A_2 * Cos (W_2 * t)`}</MathJax.Node>\n                                        </div>\n                                    </MathJax.Context>\n                                    <MathJax.Context input='ascii'>\n                                        <div>\n                                            <MathJax.Node >{`\\\\Psi_a(t)= ${props.response.a_2} * Cos (${props.response.W2} * t)`}</MathJax.Node>\n                                        </div>\n                                    </MathJax.Context>\n                                    <MathJax.Context input='ascii'>\n                                        <div>\n                                            <MathJax.Node >{`\\\\Psi_b(t)= - A_2 * Cos (W_2 * t)`}</MathJax.Node>\n                                        </div>\n                                    </MathJax.Context>\n                                    <MathJax.Context input='ascii'>\n                                        <div>\n                                            <MathJax.Node >{`\\\\Psi_b(t)= - ${props.response.a_2} * Cos (${props.response.W2} * t)`}</MathJax.Node>\n                                        </div>\n                                    </MathJax.Context>\n                                </div> : props.response.type == 'COMBINADO' ?\n                                    <div className=\"ecuation\">\n                                        <MathJax.Context input='ascii'>\n                                            <div style={{ marginBottom: 10 }}>\n                                                <MathJax.Node >{`\\\\Psi_a(t)= A_1 * Cos(W_1*t) + A_2 * Cos (W_2 * t)`}</MathJax.Node>\n                                            </div>\n                                        </MathJax.Context>\n                                        <MathJax.Context input='ascii'>\n                                            <div style={{ marginBottom: 20 }}>\n                                                <MathJax.Node >{`\\\\Psi_a(t)= ${props.response.a_1} * Cos(${props.response.W1}*t) +${props.response.a_2}* Cos (${props.response.W2} * t)`}</MathJax.Node>\n                                            </div>\n                                        </MathJax.Context>\n                                        <MathJax.Context input='ascii'>\n                                            <div style={{ marginBottom: 10 }}>\n                                                <MathJax.Node >{`\\\\Psi_b(t)= A_1 * Cos(W_1*t) - A_2 * Cos (W_2 * t)`}</MathJax.Node>\n                                            </div>\n                                        </MathJax.Context>\n                                        <MathJax.Context input='ascii'>\n                                            <div>\n                                                <MathJax.Node >{`\\\\Psi_b(t)=${props.response.a_1} * Cos(${props.response.W1}*t) - ${props.response.a_2} * Cos (${props.response.W2} * t)`}</MathJax.Node>\n                                            </div>\n                                        </MathJax.Context>\n                                    </div> : <></>\n                        }\n                    </div>\n                </div>\n                <div style={{ border:'1px solid #50E3C4', display:'flex', flexDirection:'column', backgroundColor:'#fff'}}>\n                    <div id=\"graph\">\n                    </div>\n                    <div id=\"graph2\">\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n","import React, { useEffect } from 'react'\nimport Simple from './simple/index'\nimport Amortiguado from './amortiguado/index'\nimport Forzado from './forzado/index'\nimport Acoplado from './acoplado/index'\nimport './Blackboard.css'\nexport default function Blackboard(props) {\n    return (\n        <>\n            {props.type === 'simple' ?\n                <Simple type={props.type} inputs={props.inputs} response={props.response} energies={props.energies} />\n                : props.type === 'amortiguado' ?\n                    <Amortiguado type={props.type} inputs={props.inputs} response={props.responseAmortiguado} />\n                    : props.type === 'acoplados' ?\n                        <Acoplado type={props.type} inputs={props.inputs} response={props.responseAcoplados} />\n                        : <Forzado type={props.type} inputs={props.inputs} response={props.responseForzado} />\n            }</>\n    )\n}\n","export function pendulum(prmLongCuerda, prmGravedad, prmPosIni, prmVelIni) {\n    let varPhi;\n    let varTheta0\n    const varW = Math.sqrt(prmGravedad / prmLongCuerda);\n    const varT = 2 * Math.PI * Math.sqrt(prmLongCuerda / prmGravedad);\n    const varF = varW / (2 * Math.PI);\n    let varPhi1\n    let funcAmplitud\n\n    if (prmPosIni >= 0 && prmVelIni >= 0) {\n\n        if (prmPosIni > 0 && prmVelIni > 0) {\n\n            varPhi1 = Math.abs(Math.atan(prmVelIni / (prmPosIni * varW)))\n            varPhi = 2 * Math.PI - varPhi1; //4\n            varTheta0 = Math.abs(prmPosIni / Math.cos(varPhi))\n            funcAmplitud = 'cos'\n        }\n        if (prmPosIni == 0) {\n\n            varPhi1 = Math.PI / 2\n            varPhi = 2 * Math.PI - varPhi1; //4\n            varTheta0 = Math.abs(prmVelIni / (varW * Math.sin(varPhi)))\n            funcAmplitud = 'sen'\n        }\n        if (prmVelIni == 0) {\n\n            varPhi = 0\n            varTheta0 = prmPosIni\n            funcAmplitud = 'cos'\n        }\n    }\n    if (prmPosIni < 0 && prmVelIni >= 0) {\n\n        if (prmVelIni == 0) {\n            varPhi = 0\n            varTheta0 = Math.abs(prmPosIni)\n            funcAmplitud = 'cos'\n        }\n        else {\n            varPhi1 = Math.abs(Math.atan(prmVelIni / (-varW * prmPosIni)));\n            varPhi = Math.PI + varPhi1; //3\n            varTheta0 = Math.abs(prmPosIni / (Math.cos(varPhi)))\n            funcAmplitud = 'cos'\n        }\n\n    }\n    if (prmPosIni < 0 && prmVelIni < 0) {\n        varPhi1 = Math.abs(Math.atan(-(prmVelIni / (prmPosIni * varW))))\n        varPhi = Math.PI - varPhi1;//2\n        varTheta0 = Math.abs(prmPosIni / (Math.cos(varPhi)))\n        funcAmplitud = 'cos'\n    }\n    if (prmPosIni >= 0 && prmVelIni < 0) {\n\n        if (prmPosIni == 0) {\n            varPhi = Math.PI / 2;//1\n            varTheta0 = Math.abs(prmVelIni / (varW * Math.sin(varPhi)))\n            funcAmplitud = 'sen'\n\n        }\n        else {\n            varPhi = Math.abs(Math.atan(prmVelIni / (-varW * prmPosIni)))\n            varTheta0 = prmPosIni / Math.cos(varPhi)\n            funcAmplitud = 'cos'\n        }\n    }\n\n\n    return {\n        frecuenciaNatural: varW ? varW.toFixed(2) : varW,//rad/seg\n        periodo: varT ? varT.toFixed(2) : varT,//s\n        frecuencia: varF ? varF.toFixed(2) : varF,//hz\n        desfase: varPhi ? varPhi.toFixed(2) : varPhi,//rad\n        amplitud: varTheta0 ? degrees_to_radians(varTheta0).toFixed(2) : varTheta0,//ang,\n        funcAmplitud: funcAmplitud\n\n    }\n\n}\n\nexport function energies(prmMasa, prmGravedad, prmLongCuerda, prmPosIni, prmVelIni) {\n    let EP = prmMasa * prmGravedad * prmLongCuerda * ((prmPosIni ^ 2) / 2)\n    let EC = 1 / 2 * prmMasa * prmLongCuerda ^ 2 * prmVelIni ^ 2\n    return {\n        ep: EP,\n        ec: EC,\n        et: EP + EC\n    }\n}\n\nexport function amortiguado(prmLongCuerda, prmGravedad, prmPosIni, prmVelIni, prmMasa, prmB) {\n    const gamma = prmB / (2 * prmMasa);\n    const varW = Math.sqrt(prmGravedad / prmLongCuerda);\n    const gamma_2 = Math.pow(gamma, 2)\n    const varW_2 = Math.pow(varW, 2);\n    const varF = varW / (2 * Math.PI);\n    let type\n    let c1, c2, m1, m2, phi, c, phi1, ommega\n    ommega = Math.sqrt(varW_2 - gamma_2)\n    if (varW_2 == gamma_2) {\n        //CRITICAMENTE AMORTIGUADO\n        c1 = prmPosIni;\n        c2 = prmVelIni + (c1 * gamma)\n        type = 'amortiguado'\n    }\n    if (varW_2 < gamma_2) {\n        //SOBREAMORTIGUADO\n        type = 'sobreamortiguado'\n        m1 = -gamma + (Math.sqrt(gamma_2 - varW_2))\n        m2 = -gamma - (Math.sqrt(gamma_2 - varW_2))\n        c2 = (prmVelIni - (prmPosIni * m1)) / (m2 - m1)\n        c1 = prmPosIni - c2\n    }\n    if (varW_2 > gamma_2) {\n        //SUBAMORTIGUADO\n\n        type = 'subamortiguado'\n        if (prmPosIni >= 0 && prmVelIni >= 0) {\n            if (prmPosIni == 0) {\n                phi1 = Math.PI / 2;\n                phi = 2 * Math.PI - phi1;\n                c = Math.abs(prmVelIni / (ommega * Math.sin(phi)))\n            }\n            if (prmVelIni == 0) {\n                phi1 = Math.abs(Math.atan(-gamma / ommega))\n                phi = 2 * Math.PI - phi1;\n                c = Math.abs(prmPosIni / (Math.cos(phi)))\n            }\n            if (prmVelIni > 0 && prmPosIni > 0) {\n                phi1 = Math.abs(Math.atan((prmVelIni / (prmPosIni * -ommega)) + (-gamma / ommega)))\n                phi = 2 * Math.PI - phi1;\n                c = Math.abs(prmPosIni / (Math.cos(phi)))\n            }\n\n        }\n        if (prmVelIni >= 0 && prmPosIni < 0) {\n            if (prmVelIni == 0) {\n\n                phi1 = Math.abs(Math.atan(-gamma / ommega))\n                phi = Math.PI + phi1;\n                c = Math.abs(prmPosIni / (Math.cos(phi)))\n            }\n            else {\n                phi1 = Math.abs(Math.atan((prmVelIni / (prmPosIni * -ommega)) + (-gamma / ommega)))\n                phi = Math.PI + phi1;\n                c = Math.abs(prmPosIni / (Math.cos(phi)));\n            }\n        }\n        if (prmVelIni < 0 && prmPosIni < 0) {\n            phi1 = Math.abs(Math.atan((prmVelIni / (prmPosIni * -ommega)) + (-gamma / ommega)))\n            phi = Math.PI - phi1;\n            c = Math.abs(prmPosIni / (Math.cos(phi)));\n        }\n        if (prmPosIni >= 0 && prmVelIni < 0) {\n            if (prmPosIni == 0) {\n                phi = Math.PI / 2\n                c = Math.abs(prmVelIni / (ommega * Math.sin(phi)));\n            }\n            else {\n                phi = Math.abs(Math.atan((prmVelIni / (prmPosIni * -ommega)) + (-gamma / ommega)))\n                c = Math.abs(prmPosIni / (Math.cos(phi)));\n            }\n        }\n    }\n\n    return {\n        type: type,\n        c1: c1, //constantes arbitrarias\n        c2: c2, //constantes arbitrarias\n        m1: m1,\n        m2: m2,\n        phi: phi,\n        c: c,\n        frecuenciaNatural: varW,\n        frecuencia: varF,\n        gamma: gamma,\n        ommega: ommega\n    }\n}\nexport function forzado(prmLongCuerda, prmGravedad, prmPosIni, prmVelIni, prmMasa, prmB, prmF0, prmWf) {\n    let amplitudMaxima, delta;\n    if (prmB > 0) {\n        const { c1, c2, c, frecuenciaNatural, frecuencia, m1, m2, phi, gamma, type, ommega } = amortiguado(prmLongCuerda, prmGravedad, prmPosIni, prmVelIni, prmMasa, prmB);\n        const denominador = (Math.pow((Math.pow(frecuenciaNatural, 2) - Math.pow(prmWf, 2)), 2)) + (Math.pow(2 * gamma * prmWf), 2)\n        amplitudMaxima = (prmF0 / prmMasa) / (Math.sqrt(denominador));\n        delta = Math.atan((2 * gamma * prmWf) / (Math.pow(frecuenciaNatural, 2) - Math.pow(prmWf, 2)))\n        return {\n            type: type,\n            c1: c1, //constantes arbitrarias\n            c2: c2, //constantes arbitrarias\n            m1: m1,\n            m2: m2,\n            phi: phi,\n            c: c,\n            frecuenciaNatural,\n            frecuencia,\n            ommega,\n            gamma: gamma,\n            amplitudMaxima: amplitudMaxima,\n            delta: delta,\n            label: 'amortiguado'\n\n        }\n    } else {\n        const { frecuenciaNatural, periodo, frecuencia, desfase, amplitud, funcAmplitud } = pendulum(prmLongCuerda, prmGravedad, prmPosIni, prmVelIni)\n        if (prmWf < frecuenciaNatural) {\n            const denominador = Math.pow(frecuenciaNatural, 2) - Math.pow(prmWf, 2)\n            amplitudMaxima = (prmF0 / prmMasa) / (denominador)\n            delta = 0\n        }\n        if (prmWf > frecuenciaNatural) {\n            const denominador = Math.pow(prmWf, 2) - (Math.pow(frecuenciaNatural, 2))\n            amplitudMaxima = (prmF0 / prmMasa) / (denominador)\n            delta = Math.PI\n        }\n\n        return {\n            frecuenciaNatural, periodo, frecuencia, desfase, amplitud, funcAmplitud,\n            amplitudMaxima: amplitudMaxima,\n            delta: delta,\n            label: 'simple'\n        }\n    }\n}\n\nexport function acoplados(prmLongCuerda, prmGravedad, prmPosIni, prmVelIni, prmMasa, prmPosBlock, prmConstElastic) {\n   \n    const a = ((3 * prmConstElastic) / (2 * prmMasa)) + (prmGravedad / prmLongCuerda)\n    const b = Math.sqrt((Math.pow((5 * prmConstElastic), 2) / Math.pow(prmMasa, 2)) - ((2 * prmGravedad * prmConstElastic) / (prmLongCuerda * prmMasa)))\n\n    const W1_2 = a + ((1 / 2) * b)\n    const W1 = Math.sqrt(W1_2)\n\n    const W2_2 = a - ((1 / 2) * b)\n    const W2 = Math.sqrt(W2_2)\n\n    let a_2 = 0\n    let a_1 = 0\n    let type = ''\n    if (prmPosIni == prmPosBlock) {\n        //PRIMER MODO DE VIBRACIÓN\n        a_2 = 0\n        a_1 = degrees_to_radians(prmPosIni)\n        type = 'PRIMERO'\n    }\n    if (-prmPosBlock == prmPosIni) {\n        //SEGUNDO MODO DE VIBRACIÓN\n        type = 'SEGUNDO'\n        a_1 = 0;\n        a_2 = degrees_to_radians(prmPosBlock)\n    }\n    if (prmPosBlock > 0 && prmPosIni == 0) {\n        //MODO DE VIBRACIÓN COMBINADO\n        type = 'COMBINADO'\n        a_1 = degrees_to_radians(prmPosBlock / 2);\n        a_2 = degrees_to_radians(prmPosBlock / 2);\n\n    }\n     console.log('ACOPLADOS')\n    console.log(a_1)\n    console.log(a_2) \n    console.log(W1)\n    console.log(W2) \n    console.log(type) \n    return {\n        W1: isNumber(W1)? W1:0, //Frecuencias\n        W2:isNumber(W2)? W2:0,  // Frecuencias\n        a_1: isNumber(a_1)? a_1:0, //amplitudes\n        a_2: isNumber(a_2)? a_2:0,//amplitudes\n        type\n    }\n}\nfunction degrees_to_radians(degrees) {\n    var pi = Math.PI;\n    return degrees * (pi / 180);\n}\n\nvar isNumber = function isNumber(value) \n{\n   return typeof value === 'number' && isFinite(value);\n}","import React, { useState, useEffect } from 'react'\nimport './Platform.css'\nimport SimplePendulumAnimation from './animations/AcompladoPendulum'\nimport Form from './inputs/Form'\nimport { ButtonGroup, Button } from '@material-ui/core'\nimport Checks from './checks/Checks'\nimport { MdSettings } from 'react-icons/md'\nimport Blackboard from './blackboard/Blackboard'\nimport { pendulum, energies, amortiguado, forzado, acoplados } from '../../services/index'\n\nexport default function Platform() {\n    const [page, setPage] = useState('solution')\n    const [pageConfig, setPageConfig] = useState('data')\n    const [type, setType] = useState('acoplados')\n    const [configInputs, setConfigInputs] = useState({ length: { name: 'length', data: 1, checked: true, label: 'Longitud de la cuerda' }, gravity: { name: 'gravity', data: 9.8, checked: true, label: 'Valor de la gravedad' }, posInitial: { name: 'posInitial', data: 7, checked: true, label: 'Ángulo inicial' }, velInitial: { name: 'velInitial', data: 0, checked: true, label: 'Velocidad inicial' }, mass: { name: 'mass', data: 10, checked: true, label: 'Masa del objeto' } })\n    const [configInputsAmortiguado, setConfigInputsAmortiguado] = useState({ length: { name: 'length', data: 1, checked: true, label: 'Longitud de la cuerda' }, gravity: { name: 'gravity', data: 9.8, checked: true, label: 'Valor de la gravedad' }, posInitial: { name: 'posInitial', data: 7, checked: true, label: 'Ángulo inicial' }, velInitial: { name: 'velInitial', data: 0, checked: true, label: 'Velocidad inicial' }, mass: { name: 'mass', data: 10, checked: true, label: 'Masa del objeto' }, const: { name: 'const', data: 10, checked: true, label: 'Constante de amortiguamiento' } })\n    const [configInputsForzado, setConfigInputsForzado] = useState({ length: { name: 'length', data: 1, checked: true, label: 'Longitud de la cuerda' }, gravity: { name: 'gravity', data: 9.8, checked: true, label: 'Valor de la gravedad' }, posInitial: { name: 'posInitial', data: 7, checked: true, label: 'Ángulo inicial' }, velInitial: { name: 'velInitial', data: 0, checked: true, label: 'Velocidad inicial' }, mass: { name: 'mass', data: 10, checked: true, label: 'Masa del objeto' }, const: { name: 'const', data: 10, checked: true, label: 'Constante de amortiguamiento' }, fuerzaInicial: { name: 'fuerzaInicial', data: 1, checked: true, label: 'Fuerza Inicial' }, frecuenciaFuerza: { name: 'frecuenciaFuerza', data: 1, checked: true, label: 'Frecuencia Fuerza' } })\n    const [configInputsAcoplados, setConfigInputsAcoplados] = useState({ length: { name: 'length', data: 1, checked: true, label: 'Longitud de la cuerda' }, gravity: { name: 'gravity', data: 9.8, checked: true, label: 'Valor de la gravedad' }, posInitial: { name: 'posInitial', data: 3, checked: true, label: 'Ángulo inicial' }, velInitial: { name: 'velInitial', data: 0, checked: true, label: 'Velocidad inicial' }, mass: { name: 'mass', data: 10, checked: true, label: 'Masa del objeto' }, posBlock: { name: 'posBlock', data: 3, checked: true, label: 'Posición del bloque' }, constElasticidad: { name: 'constElasticidad', data: 10, checked: true, label: 'Constante de elasticidad',  } })\n\n    const [response, setResponse] = useState({})\n    const [responseAmortiguado, setResponseAmortiguado] = useState({})\n    const [responseForzado, setResponseForzado] = useState({})\n    const [responseAcoplados, setResponseAcoplado] = useState({})\n    const [responseEnergies, setResponseEnergies] = useState({})\n\n    const handleChecks = (name, value) => {\n        switch (type) {\n            case 'simple':\n                setConfigInputs({ ...configInputs, [name]: { ...configInputs[name], checked: value } })\n                break;\n            case 'amortiguado':\n                setConfigInputsAmortiguado({ ...configInputsAmortiguado, [name]: { ...configInputsAmortiguado[name], checked: value } })\n                break;\n            case 'forzado':\n                setConfigInputsForzado({ ...configInputsForzado, [name]: { ...configInputsForzado[name], checked: value } })\n            case 'acoplados':\n                setConfigInputsAcoplados({ ...configInputsAcoplados, [name]: { ...configInputsAcoplados[name], checked: value } })\n                break;\n            default:\n                break;\n        }\n\n    }\n    const handleInputs = (name, value) => {\n\n        switch (type) {\n            case 'simple':\n                setConfigInputs({ ...configInputs, [name]: { ...configInputs[name], data: value } })\n                break;\n            case 'amortiguado':\n                setConfigInputsAmortiguado({ ...configInputsAmortiguado, [name]: { ...configInputsAmortiguado[name], data: name === 'mass' && value <= 0 ? 1 : value } })\n                break;\n            case 'forzado':\n                setConfigInputsForzado({ ...configInputsForzado, [name]: { ...configInputsForzado[name], data: name === 'mass' && value <= 0 ? 1 : value } })\n                break;\n            case 'acoplados':\n                setConfigInputsAcoplados({ ...configInputsAcoplados, [name]: { ...configInputsAcoplados[name], data: name === 'mass' && value <= 0 ? 1 : value } })\n                break;\n            default:\n                break;\n        }\n\n    }\n    const handleType = (name) => {\n\n        setType(name)\n    }\n    useEffect(() => {\n\n        switch (type) {\n            case 'simple':\n\n                setResponse(pendulum(configInputs.length.data, configInputs.gravity.data, configInputs.posInitial.data, configInputs.velInitial.data))\n                if (configInputs.mass.checked) {\n                    setResponseEnergies(energies(configInputs.mass.data, configInputs.gravity.data, configInputs.length.data, configInputs.posInitial.data, configInputs.velInitial.data))\n                }\n                break;\n            case 'amortiguado':\n                setResponseAmortiguado(amortiguado(configInputsAmortiguado.length.data, configInputsAmortiguado.gravity.data, configInputsAmortiguado.posInitial.data, configInputsAmortiguado.velInitial.data, configInputsAmortiguado.mass.data, configInputsAmortiguado.const.data))\n                break;\n            case 'forzado':\n\n                setResponseForzado(forzado(configInputsForzado.length.data, configInputsForzado.gravity.data, configInputsForzado.posInitial.data, configInputsForzado.velInitial.data, configInputsForzado.mass.data, configInputsForzado.const.data, configInputsForzado.fuerzaInicial.data, configInputsForzado.frecuenciaFuerza.data))\n                break;\n            case 'acoplados':\n                setResponseAcoplado(acoplados(configInputsAcoplados.length.data, configInputsAcoplados.gravity.data, configInputsAcoplados.posInitial.data, configInputsAcoplados.velInitial.data, configInputsAcoplados.mass.data, configInputsAcoplados.posBlock.data, configInputsAcoplados.constElasticidad.data))\n                break;\n\n            default:\n                break;\n        }\n    }, [configInputs, configInputsAmortiguado, configInputsForzado, configInputsAcoplados])\n\n\n    return (\n        <div className=\"page-platform\">\n            <div className=\"platform-header\">\n                <div className=\"platform-tools\">\n                </div>\n                <div className=\"platform-draw\">\n                    <div className=\"button-group\">\n                        <ButtonGroup size='small' color='primary'>\n                            <Button variant={page === 'solution' ? 'contained' : null} onClick={() => setPage('solution')}>Solution</Button>\n                            <Button variant={page === 'graph' ? 'contained' : null} onClick={() => setPage('graph')}>Graphic</Button>\n                        </ButtonGroup>\n                    </div>\n                </div>\n                <div className=\"platform-inputs\">\n                </div>\n            </div>\n            <div className=\"platform-canvas\">\n                <div className=\"platform-tools\">\n                </div>\n                <div className=\"platform-draw\">\n                    {page === 'solution' ? <Blackboard type={type} inputs={type === 'simple' ? configInputs : type === 'amortiguado' ? configInputsAmortiguado: type === 'acoplados' ? configInputsAcoplados : configInputsForzado } response={response} responseAmortiguado={responseAmortiguado} responseForzado={responseForzado} responseAcoplados={responseAcoplados} energies={responseEnergies} /> :\n                        <SimplePendulumAnimation mass={configInputs.mass.checked ? configInputs.mass.data + 'kg' : ''} angle={7} length={configInputs.length.data} time={2} />\n                    }\n                </div>\n                <div className=\"platform-inputs\">\n                    <ButtonGroup size='small' color='primary'>\n                        <Button variant={pageConfig === 'data' ? 'contained' : null} onClick={() => setPageConfig('data')}>Data</Button>\n                        <Button variant={pageConfig === 'configuration' ? 'contained' : null} onClick={() => setPageConfig('configuration')}><MdSettings /></Button>\n                    </ButtonGroup>\n                    {pageConfig === 'data' ? <Form configInputs={type === 'simple' ? configInputs : type === 'amortiguado' ? configInputsAmortiguado : type === 'acoplados' ? configInputsAcoplados : configInputsForzado} handleInputs={handleInputs} /> :\n                        <Checks handleType={handleType} type={type} configInputs={type === 'simple' ? configInputs : type === 'amortiguado' ? configInputsAmortiguado : configInputsForzado} handleChecks={handleChecks} />\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport Header from './components/header/Header'\nimport LandingPage from './pages/landing/Landing'\nimport Platform from './pages/platform/Platform'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#444E59'\n    },\n    secondary: {\n      main: '#50E3C4'\n    }\n  }\n});\nfunction App() {\n  return (\n\n    <div className=\"App\">\n      <MuiThemeProvider theme={theme}>\n        <Header />\n        <LandingPage />\n        <Platform />\n      </MuiThemeProvider>\n    </div >\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}