{"version":3,"sources":["assets/gif-pendulum.gif","components/header/Header.js","pages/landing/Landing.js","pages/platform/animations/SimplePendulumAnimation.jsx","pages/platform/inputs/Form.jsx","pages/platform/checks/Checks.jsx","pages/platform/blackboard/simple/index.jsx","pages/platform/blackboard/amortiguado/index.jsx","pages/platform/blackboard/forzado/index.jsx","pages/platform/blackboard/Blackboard.jsx","services/index.js","pages/platform/Platform.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","onClick","document","querySelector","scrollIntoView","behavior","rel","target","Landing","size","color","src","gif","alt","BallAnimation","styled","div","props","y","keyframes","time","SimplePendulumAnimation","style","position","height","width","overflow","angle","marginLeft","length","class","mass","Form","overflowY","paddingBottom","Object","values","configInputs","map","item","checked","label","name","value","data","onChange","e","handleInputs","type","Checks","display","flexDirection","alignItems","marginTop","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","handleChecks","gravity","posInitial","const","handleType","Index","Context","input","Node","inputs","response","frecuenciaNatural","frecuencia","periodo","energies","ep","velInitial","ec","et","textAlign","marginBottom","desfase","amplitud","funcAmplitud","gamma","c","ommega","phi","c1","c2","m1","m2","amplitudMaxima","frecuenciaFuerza","delta","Blackboard","responseAmortiguado","responseForzado","pendulum","prmLongCuerda","prmGravedad","prmPosIni","prmVelIni","varPhi","varTheta0","varPhi1","varW","Math","sqrt","varT","PI","varF","abs","atan","cos","sin","toFixed","degrees_to_radians","amortiguado","prmMasa","prmB","phi1","gamma_2","pow","varW_2","degrees","Platform","useState","page","setPage","pageConfig","setPageConfig","setType","setConfigInputs","configInputsAmortiguado","setConfigInputsAmortiguado","fuerzaInicial","configInputsForzado","setConfigInputsForzado","setResponse","setResponseAmortiguado","setResponseForzado","responseEnergies","setResponseEnergies","useEffect","console","log","EP","EC","prmF0","prmWf","denominador","forzado","ButtonGroup","Button","variant","hasOwnProperty","theme","createMuiTheme","palette","primary","main","secondary","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.809de1c9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gif-pendulum.46c90860.gif\";","import React from 'react'\nimport './Header.css'\nexport default function Header() {\n    return (\n        <div className=\"container-header\">\n            <div className=\"container-logo\">\n                __Simple Pendulum\n            </div>\n            <div className=\"container-navigation\">\n                <a href=\"#/\" onClick={() => document?.querySelector(`.page-platform`)\n                    .scrollIntoView({ behavior: \"smooth\" })}>Start</a>\n            <a rel=\"noopener noreferrer\" href=\"https://github.com/danielm2402/simple-pendulum\" target=\"_blank\">GitHub</a>\n            <a href=\"#/\">Get to know us</a>\n        </div>\n        </div >\n    )\n}\n","import React from 'react'\nimport './Landing.css'\nimport { FaGithub } from \"react-icons/fa\";\nimport gif from '../../assets/gif-pendulum.gif'\nexport default function Landing() {\n    return (\n        <div className=\"page-landing-page\">\n            <div className=\"container-left-landing-page\">\n                <div className=\"container-title\">\n                    Welcome to your simple pendulum calculator\n                </div>\n                <div className=\"container-resume\">\n                    Ea culpa Lorem nulla proident labore cupidatat commodo reprehenderit veniam.\n                </div>\n                <div className=\"container-help\">\n                    <a rel=\"noopener noreferrer\" href=\"https://github.com/danielm2402/simple-pendulum\" target=\"_blank\" className=\"button-git\">Give me a star <FaGithub size=\"2rem\" color=\"#ffffff\" /></a>\n                </div>\n            </div>\n            <div className=\"container-right-landing-page\">\n                <div className=\"framework-gif\">\n                    <div className=\"container-gif\">\n                        <img src={gif} alt=\"SIMPLE_PENDULUM\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components';\nimport './animation.css'\n\nconst moveVertically = (y) => keyframes`\nfrom {\n    transform: rotate(${y}deg);\n}\nto {\n    transform: rotate(-${y}deg);\n}\n\n`;\n\nconst BallAnimation = styled.div`\n    left: calc(50% - 50px);\n    position: absolute;\n    height: 80%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    transform-origin: top center;\n    animation :${props => moveVertically(props.y)} ${props => props.time}s infinite;\n    animation-direction: alternate-reverse;\n    animation-timing-function: linear;\n`;\n//animation: mymove 2s infinite;\nexport default function SimplePendulumAnimation(props) {\n    return (\n        <div style={{ position: 'relative', height: '100%', width: '100%' }}>\n            <div style={{ position: 'absolute', width: '100%', height: '100%', overflow: 'hidden' }} >\n                <BallAnimation y={props.angle} time={props.time}>\n                    <div className=\"pendulum\" >\n                        <h5 style={{ marginLeft: 4 }}>{props.length}m</h5>\n                    </div>\n                    <section class=\"stage\">\n                        <figure class=\"ball\"><span class=\"shadow\">{props.mass}</span></figure>\n                    </section>\n                </BallAnimation>\n            </div>\n            <div style={{ position: 'absolute', width: '100%', height: '100%', overflow: 'hidden' }} >\n                <div className=\"protactor-angular\">\n                    <div className=\"chart chart1\">\n                        <span class=\"char1\">|</span>\n\n                    </div>\n                    <div className=\"chart chart2\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">80</span>\n                    </div>\n                    <div className=\"chart chart3\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">70</span>\n                    </div>\n                    <div className=\"chart chart4\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">60</span>\n                    </div>\n                    <div className=\"chart chart5\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">50</span>\n                    </div>\n                    <div className=\"chart chart6\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">40</span>\n                    </div>\n                    <div className=\"chart chart7\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">30</span>\n                    </div>\n                    <div className=\"chart chart8\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">20</span>\n                    </div>\n                    <div className=\"chart chart9\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">10</span>\n                    </div>\n                    <div className=\"chart chart10\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">0</span>\n                    </div>\n                    <div className=\"chart chart11\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">10</span>\n                    </div>\n                    <div className=\"chart chart12\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">20</span>\n                    </div>\n                    <div className=\"chart chart13\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">30</span>\n                    </div>\n                    <div className=\"chart chart14\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">40</span>\n                    </div>\n                    <div className=\"chart chart15\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">50</span>\n                    </div>\n                    <div className=\"chart chart16\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">60</span>\n                    </div>\n                    <div className=\"chart chart17\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">70</span>\n                    </div>\n                    <div className=\"chart chart18\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">80</span>\n                    </div>\n                    <div className=\"chart chart19\">\n                        <span class=\"char1\">|</span>\n\n                    </div>\n                </div>\n                <div className=\"subprotactor-angular\">\n\n                </div>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport './Form.css'\nexport default function Form(props) {\n    return (\n        <div className=\"container-form\">\n            <div style={{ overflowY:'scroll', paddingBottom:20}}>\n                {Object.values(props.configInputs).map(item => {\n                    if (item.checked) {\n                        return <div className=\"item-form\">\n                            <h6>{item.label}</h6>\n                            <input name={item.name} value={item.data} onChange={(e) => props.handleInputs(e.target.name, e.target.value)} type=\"number\" />\n                        </div>\n                    }\n                    return <></>\n                })}\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { FormGroup, FormControlLabel, Checkbox, FormLabel } from '@material-ui/core'\nimport './Checks.css'\nexport default function Checks(props) {\n    return (\n        <div style={{ width: '100%', height: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n            <div className=\"container-check\" style={{ marginTop: '2.33em' }}>\n                <FormLabel component=\"legend\">Campos de entrada</FormLabel>\n            </div>\n            <div className=\"container-check\">\n                {props.type=='simple'?\n                <FormGroup>\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.length.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"length\" />}\n                        label={<span className=\"check-title\">Longitud de la cuerda</span>}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.gravity.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"gravity\" />}\n                        label={<span className=\"check-title\">Gravedad</span>}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.posInitial.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"posInitial\" />}\n                        label={<span className=\"check-title\">Posición inicial</span>}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.mass.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"mass\" />}\n                        label={<span className=\"check-title\">Masa</span>}\n                    />\n                </FormGroup>\n                :props.type=='amortiguado'?\n                <FormGroup>\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.length.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"length\" />}\n                        label={<span className=\"check-title\">Longitud de la cuerda</span>}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.gravity.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"gravity\" />}\n                        label={<span className=\"check-title\">Gravedad</span>}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.posInitial.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"posInitial\" />}\n                        label={<span className=\"check-title\">Posición inicial</span>}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.mass.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"mass\" />}\n                        label={<span className=\"check-title\">Masa</span>}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.const.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"mass\" />}\n                        label={<span className=\"check-title\">Constante de amortiguamiento</span>}\n                    />\n                </FormGroup>\n                :<></>}\n            </div>\n            <div>\n                <select onChange={(e)=>props.handleType(e.target.value)} value={props.type}>\n                    <option value=\"simple\"> Simple</option>\n                    <option value=\"amortiguado\"> Amortiguado</option>\n                    <option value=\"forzado\"> Forzado</option>\n                </select>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport MathJax from 'react-mathjax2'\nimport '../Blackboard.css'\nexport default function Index(props) {\n    return (\n        <div className=\"container-solution\" >\n              <div className=\"left-solution\">\n                <div className=\"title\">\n                    <h4>Frecuencia natural de vibracion (Wo):</h4>\n                </div>\n                <div className=\"ecuation\">\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'W_o=sqrt (frac{g}{l})'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'W_o=sqrt (frac{' + props.inputs.gravity.data + '}{' + props.inputs.length.data + '})'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'W_o=' + props.response.frecuenciaNatural+'frac{rad}{s}'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                </div>\n                <div className=\"title\">\n                    <h4>Frecuencia (f):</h4>\n                </div>\n                <div className=\"ecuation\">\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'f=frac{W_o}{2\\\\pi}'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'f=frac{' + props.response.frecuenciaNatural + '}{2\\\\pi}'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'f=' + props.response.frecuencia+'hz'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                </div>\n\n                <div className=\"title\">\n                    <h4>Periodo (T):</h4>\n                </div>\n                <div className=\"ecuation\">\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'T=2pisqrt(frac{l}{g})'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'T=2pisqrt(frac{' + props.inputs.length.data + '}{' + props.inputs.gravity.data + '})'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'T=' + props.response.periodo+'s'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                </div>\n                {props.inputs.mass.checked ?\n                    <>\n                        <div className=\"title\">\n                            <h4>Energía potencial (EP):</h4>\n                        </div>\n                        <div className=\"ecuation\">\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{'EP= m*g*l(frac{θ^2}{2})'}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`EP= ${props.inputs.mass.data}*${props.inputs.gravity.data}*${props.inputs.length.data}(frac{${props.inputs.posInitial.data}^2}{2})`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`EP= ${props.energies.ep} J`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                        </div>\n                        <div className=\"title\">\n                            <h4>Energía cinética (EC):</h4>\n                        </div>\n                        <div className=\"ecuation\">\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{'EC= frac{1}{2}*m*l^2*θ^2'}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`EC= frac{1}{2}*${props.inputs.mass.data}*${props.inputs.length.data}^2*${props.inputs.velInitial.data}^2`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`EC= ${props.energies.ec} J`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                        </div>\n\n                        <div className=\"title\">\n                            <h4>Energía total</h4>\n                        </div>\n                        <div className=\"ecuation\">\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{'E= EP + EC'}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`E= ${props.energies.ep} + ${props.energies.ec}`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`E= ${props.energies.et} J`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                        </div>\n\n                    </>\n                    : <></>}\n            </div>\n            <div className=\"right-solution\">\n                <div className=\"title\">\n                    <div className=\"title\">\n                        <h4>Ecuación de movimiento:</h4>\n                    </div>\n                    <div className=\"ecuation\">\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'θ(t)=θ_0 Cos(W_0t+\\\\varphi)'}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>[1] Evaluar las condiciones iniciales en t=0 </h5>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'θ(0)=θ_0 Cos(W_0t+\\\\varphi)=' + props.inputs.posInitial.data}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'θ(0)=θ_0 Cos(varphi)=' + props.inputs.posInitial.data}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>[2] Evaluar las condiciones iniciales en t=0</h5>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'frac{dθ(0)}{dt}= -W_o θ_0 Sen(W_ot + \\\\varphi) =' + props.inputs.velInitial.data}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'frac{dθ(0)}{dt}= -W_o θ_0 Sen(\\\\varphi) =' + props.inputs.velInitial.data}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Dividimos [2] entre [1] y despejamos para hallar Phi</h5>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'frac{-W_o θ_0 Sen(\\\\varphi)}{θ_0 Cos(\\\\varphi)} =' +'frac{'+ props.inputs.velInitial.data+'}{'+props.inputs.posInitial.data+'}'}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'\\\\varphi=arctan(frac{' + props.inputs.velInitial.data + '}{-' + props.response.frecuenciaNatural+'* '+  props.inputs.posInitial.data + '})'}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'\\\\varphi=' + props.response.desfase}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Hallamos el valor de la amplitud</h5>\n                        {props.inputs.posInitial.data==0?\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{`θ_0= frac{${props.inputs.velInitial.data}}{${-props.response.frecuenciaNatural}*Sen(${props.response.desfase})}`}</MathJax.Node>\n                                <MathJax.Node >{`θ_0=${props.response.amplitud} rad`}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>:\n                        <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{`θ_0= frac{${props.inputs.posInitial.data}}{${props.response.funcAmplitud==='cos'?'Cos':'Sen'}(${ props.response.desfase})}`}</MathJax.Node>\n                            <MathJax.Node >{`θ_0=${props.response.amplitud} rad`}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                        }\n                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>La ecuación que describe el movimiento del pendulo es:</h5>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'θ(t)=' + props.response.amplitud + '*Cos(' + props.response.frecuenciaNatural + ' t+' + props.response.desfase + ')'}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                    </div>\n                </div>\n            </div>\n         \n            \n        </div>\n    )\n}\n","import React from 'react'\nimport MathJax from 'react-mathjax2'\nimport '../Blackboard.css'\nexport default function Index(props) {\n    return (\n        <div className=\"container-solution\" >\n            <div className=\"left-solution\">\n                <div className=\"title\">\n                    <h4>Frecuencia natural de vibracion (Wo):</h4>\n                </div>\n                <div className=\"ecuation\">\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'W_o=sqrt (frac{g}{l})'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'W_o=sqrt (frac{' + props.inputs.gravity.data + '}{' + props.inputs.length.data + '})'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'W_o=' + props.response.frecuenciaNatural + 'frac{rad}{s}'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                </div>\n                <div className=\"title\">\n                    <h4>Frecuencia (f):</h4>\n                </div>\n                <div className=\"ecuation\">\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'f=frac{W_o}{2\\\\pi}'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'f=frac{' + props.response.frecuenciaNatural + '}{2\\\\pi}'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'f=' + props.response.frecuencia + 'hz'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                </div>\n                <div className=\"title\">\n                    <h4>Gamma:</h4>\n                </div>\n                <div className=\"ecuation\">\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{'\\gamma=frac{b}{2*m}'}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{`\\gamma=frac{${props.inputs.const.data}}{2*${props.inputs.mass.data}}`}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                    <MathJax.Context input='ascii'>\n                        <div>\n                            <MathJax.Node >{`\\gamma=${props.response.gamma}`}</MathJax.Node>\n                        </div>\n                    </MathJax.Context>\n                </div>\n\n            </div>\n            <div className=\"right-solution\">\n                <div className=\"title\">\n                    <div className=\"title\">\n                        <h4>Ecuación de movimiento:</h4>\n                    </div>\n\n                    <div className=\"ecuation\">\n                        {props.response.type === 'subamortiguado' ?\n                            <div>\n                            <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Comparando Gamma con Frecuencia natural, como:</h5>\n                            <div className=\"ecuation\">\n                                <MathJax.Context input='ascii'>\n                                    <div>\n                                        <MathJax.Node >{'\\gamma^2 < W_0^2'}</MathJax.Node>\n                                    </div>\n                                </MathJax.Context>\n                                <MathJax.Context input='ascii'>\n                                    <div>\n                                        <MathJax.Node >{`${props.response.gamma}^2 < ${props.response.frecuenciaNatural}^2`}</MathJax.Node>\n                                    </div>\n                                </MathJax.Context>\n                            </div>\n                            <h5 style={{ color: '#234f4f', textAlign: 'left', marginTop: 20 }}>Al ser gamma menor que la frecuencia natural</h5>\n                            <h5 style={{ color: '#234f4f', textAlign: 'left',  marginBottom: 20}}> es un sistema subamortiguado, por lo tanto su ecuación está dada por: </h5>\n                            <div className=\"ecuation\">\n                                <MathJax.Context input='ascii'>\n                                    <div>\n                                        <MathJax.Node >{'θ(t)=c*e^(-\\gamma*t)* Cos (W*t+\\phi)'}</MathJax.Node>\n                                    </div>\n                                </MathJax.Context>\n                                <MathJax.Context input='ascii'>\n                                    <div>\n                                    <MathJax.Node >{`θ(t)=${props.response.c}*e^(-${props.response.gamma}*t)* Cos (${props.response.ommega}*t+${props.response.phi})`}</MathJax.Node>\n                                    </div>\n                                </MathJax.Context>\n\n                            </div>\n                        </div>\n                            : props.response.type === 'amortiguado' ?\n                                <div>\n                                    <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Comparando Gamma con Frecuencia natural, como:</h5>\n                                    <div className=\"ecuation\">\n                                        <MathJax.Context input='ascii'>\n                                            <div>\n                                                <MathJax.Node >{'\\gamma^2 = W_0^2'}</MathJax.Node>\n                                            </div>\n                                        </MathJax.Context>\n                                        <MathJax.Context input='ascii'>\n                                            <div>\n                                                <MathJax.Node >{`${props.response.gamma}^2 = ${props.response.frecuenciaNatural}^2`}</MathJax.Node>\n                                            </div>\n                                        </MathJax.Context>\n                                    </div>\n                                    <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Al ser iguales, es un sistema criticamente amortiguado, por lo tanto su ecuación está dada por: </h5>\n                                    <div className=\"ecuation\">\n                                        <MathJax.Context input='ascii'>\n                                            <div>\n                                                <MathJax.Node >{'θ(t)=(c1+c2*t)e^(-\\gamma*t)'}</MathJax.Node>\n                                            </div>\n                                        </MathJax.Context>\n                                        <MathJax.Context input='ascii'>\n                                            <div>\n                                                <MathJax.Node >{`θ(t)=(${props.response.c1}+${props.response.c2}*t)e^(-${props.response.gamma}*t)`}</MathJax.Node>\n                                            </div>\n                                        </MathJax.Context>\n\n                                    </div>\n                                </div>\n                                :\n                                <div>\n                                <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Comparando Gamma con Frecuencia natural, como:</h5>\n                                <div className=\"ecuation\">\n                                    <MathJax.Context input='ascii'>\n                                        <div>\n                                            <MathJax.Node >{'\\gamma^2 > W_0^2'}</MathJax.Node>\n                                        </div>\n                                    </MathJax.Context>\n                                    <MathJax.Context input='ascii'>\n                                        <div>\n                                            <MathJax.Node >{`${props.response.gamma}^2 > ${props.response.frecuenciaNatural}^2`}</MathJax.Node>\n                                        </div>\n                                    </MathJax.Context>\n                                </div>\n                                <h5 style={{ color: '#234f4f', textAlign: 'left', marginTop: 20 }}>Al ser gamma mayor que la frecuencia natural</h5>\n                                <h5 style={{ color: '#234f4f', textAlign: 'left',  marginBottom: 20}}> es un sistema sobreamortiguado, por lo tanto su ecuación está dada por: </h5>\n                                <div className=\"ecuation\">\n                                    <MathJax.Context input='ascii'>\n                                        <div>\n                                            <MathJax.Node >{'θ(t)=c_1*e^(m_1*t)+ c_2*e^(m_2*t)'}</MathJax.Node>\n                                        </div>\n                                    </MathJax.Context>\n                                    <MathJax.Context input='ascii'>\n                                        <div>\n                                        <MathJax.Node >{`θ(t)=${props.response.c1}*e^(${props.response.m1}*t)+ ${props.response.c2}*e^(${props.response.m2}*t)`}</MathJax.Node>\n                                        </div>\n                                    </MathJax.Context>\n    \n                                </div>\n                            </div>}\n                        {/*  <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'θ(t)=θ_0 Cos(W_0t+\\\\varphi)'}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>[1] Evaluar las condiciones iniciales en t=0 </h5>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'θ(0)=θ_0 Cos(W_0t+\\\\varphi)=' + props.inputs.posInitial.data}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'θ(0)=θ_0 Cos(varphi)=' + props.inputs.posInitial.data}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>[2] Evaluar las condiciones iniciales en t=0</h5>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'frac{dθ(0)}{dt}= -W_o θ_0 Sen(W_ot + \\\\varphi) =' + props.inputs.velInitial.data}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'frac{dθ(0)}{dt}= -W_o θ_0 Sen(\\\\varphi) =' + props.inputs.velInitial.data}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Dividimos [2] entre [1] y despejamos para hallar Phi</h5>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'frac{-W_o θ_0 Sen(\\\\varphi)}{θ_0 Cos(\\\\varphi)} =' + props.inputs.velInitial.data}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'\\\\varphi=arctan(frac{' + props.inputs.velInitial.data + '}{-' + props.response.frecuenciaNatural+'* '+  props.inputs.posInitial.data + '})'}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'\\\\varphi=' + props.response.desfase}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Hallamos el valor de la amplitud</h5>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{`θ_0= frac{${props.inputs.posInitial.data}}{${props.response.funcAmplitud==='cos'?'Cos':'Sen'}(${ props.response.desfase})}`}</MathJax.Node>\n                                <MathJax.Node >{`θ_0=${props.response.amplitud} rad`}</MathJax.Node>\n                            </div>\n                        </MathJax.Context>\n                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>La ecuación que describe el movimiento del pendulo es:</h5>\n                        <MathJax.Context input='ascii'>\n                            <div>\n                                <MathJax.Node >{'θ(t)=' + props.response.amplitud + '*Cos(' + props.response.frecuenciaNatural + ' t+' + props.response.desfase + ')'}</MathJax.Node>\n                            </div>\n                        </MathJax.Context> */}\n                    </div>\n                </div>\n            </div>\n\n\n        </div>\n    )\n}\n","import React from 'react'\nimport MathJax from 'react-mathjax2'\nimport '../Blackboard.css'\nexport default function Index(props) {\n    return (\n        <div style={{ width:'100%', height:'100%',overflowY:'auto'}}>\n            {props.response.label === 'simple' ?\n                <div className=\"container-solution\" >\n                <div className=\"left-solution\">\n                  <div className=\"title\">\n                      <h4>Frecuencia natural de vibracion (Wo):</h4>\n                  </div>\n                  <div className=\"ecuation\">\n                      <MathJax.Context input='ascii'>\n                          <div>\n                              <MathJax.Node >{'W_o=sqrt (frac{g}{l})'}</MathJax.Node>\n                          </div>\n                      </MathJax.Context>\n                      <MathJax.Context input='ascii'>\n                          <div>\n                              <MathJax.Node >{'W_o=sqrt (frac{' + props.inputs.gravity.data + '}{' + props.inputs.length.data + '})'}</MathJax.Node>\n                          </div>\n                      </MathJax.Context>\n                      <MathJax.Context input='ascii'>\n                          <div>\n                              <MathJax.Node >{'W_o=' + props.response.frecuenciaNatural+'frac{rad}{s}'}</MathJax.Node>\n                          </div>\n                      </MathJax.Context>\n                  </div>\n                  <div className=\"title\">\n                      <h4>Frecuencia (f):</h4>\n                  </div>\n                  <div className=\"ecuation\">\n                      <MathJax.Context input='ascii'>\n                          <div>\n                              <MathJax.Node >{'f=frac{W_o}{2\\\\pi}'}</MathJax.Node>\n                          </div>\n                      </MathJax.Context>\n                      <MathJax.Context input='ascii'>\n                          <div>\n                              <MathJax.Node >{'f=frac{' + props.response.frecuenciaNatural + '}{2\\\\pi}'}</MathJax.Node>\n                          </div>\n                      </MathJax.Context>\n                      <MathJax.Context input='ascii'>\n                          <div>\n                              <MathJax.Node >{'f=' + props.response.frecuencia+'hz'}</MathJax.Node>\n                          </div>\n                      </MathJax.Context>\n                  </div>\n  \n                  <div className=\"title\">\n                      <h4>Periodo (T):</h4>\n                  </div>\n                  <div className=\"ecuation\">\n                      <MathJax.Context input='ascii'>\n                          <div>\n                              <MathJax.Node >{'T=2pisqrt(frac{l}{g})'}</MathJax.Node>\n                          </div>\n                      </MathJax.Context>\n                      <MathJax.Context input='ascii'>\n                          <div>\n                              <MathJax.Node >{'T=2pisqrt(frac{' + props.inputs.length.data + '}{' + props.inputs.gravity.data + '})'}</MathJax.Node>\n                          </div>\n                      </MathJax.Context>\n                      <MathJax.Context input='ascii'>\n                          <div>\n                              <MathJax.Node >{'T=' + props.response.periodo+'s'}</MathJax.Node>\n                          </div>\n                      </MathJax.Context>\n                  </div>\n              </div>\n              <div className=\"right-solution\">\n                  <div className=\"title\">\n                      <div className=\"title\">\n                          <h4>Ecuación de movimiento:</h4>\n                      </div>\n                      <div className=\"ecuation\">\n                          <MathJax.Context input='ascii'>\n                              <div>\n                                  <MathJax.Node >{'\\\\varphi=arctan(frac{' + props.inputs.velInitial.data + '}{-' + props.response.frecuenciaNatural+'* '+  props.inputs.posInitial.data + '})'}</MathJax.Node>\n                              </div>\n                          </MathJax.Context>\n                          <MathJax.Context input='ascii'>\n                              <div>\n                                  <MathJax.Node >{'\\\\varphi=' + props.response.desfase}</MathJax.Node>\n                              </div>\n                          </MathJax.Context>\n                          <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Hallamos el valor de la amplitud</h5>\n                          {props.inputs.posInitial.data==0?\n                          <MathJax.Context input='ascii'>\n                              <div>\n                                  <MathJax.Node >{`θ_0= frac{${props.inputs.velInitial.data}}{${-props.response.frecuenciaNatural}*Sen(${props.response.desfase})}`}</MathJax.Node>\n                                  <MathJax.Node >{`θ_0=${props.response.amplitud} rad`}</MathJax.Node>\n                              </div>\n                          </MathJax.Context>:\n                          <MathJax.Context input='ascii'>\n                          <div>\n                              <MathJax.Node >{`θ_0= frac{${props.inputs.posInitial.data}}{${props.response.funcAmplitud==='cos'?'Cos':'Sen'}(${ props.response.desfase})}`}</MathJax.Node>\n                              <MathJax.Node >{`θ_0=${props.response.amplitud} rad`}</MathJax.Node>\n                          </div>\n                      </MathJax.Context>\n                          }\n                          <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>La ecuación que describe el movimiento del pendulo es:</h5>\n                          <MathJax.Context input='ascii'>\n                              <div>\n                                  <MathJax.Node >{'θ(t)=' + props.response.amplitud + '*Cos(' + props.response.frecuenciaNatural + ' t+' + props.response.desfase + ')+'+props.response.amplitudMaxima+'*Cos ('+props.inputs.frecuenciaFuerza.data+'*t -'+props.response.delta+')'}</MathJax.Node>\n                              </div>\n                          </MathJax.Context>\n                      </div>\n                  </div>\n              </div>\n           \n          </div>\n      \n                :\n                <div className=\"container-solution\" >\n                    <div className=\"left-solution\">\n                        <div className=\"title\">\n                            <h4>Frecuencia natural de vibracion (Wo):</h4>\n                        </div>\n                        <div className=\"ecuation\">\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{'W_o=sqrt (frac{g}{l})'}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{'W_o=sqrt (frac{' + props.inputs.gravity.data + '}{' + props.inputs.length.data + '})'}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{'W_o=' + props.response.frecuenciaNatural + 'frac{rad}{s}'}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                        </div>\n                        <div className=\"title\">\n                            <h4>Frecuencia (f):</h4>\n                        </div>\n                        <div className=\"ecuation\">\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{'f=frac{W_o}{2\\\\pi}'}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{'f=frac{' + props.response.frecuenciaNatural + '}{2\\\\pi}'}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{'f=' + props.response.frecuencia + 'hz'}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                        </div>\n                        <div className=\"title\">\n                            <h4>Gamma:</h4>\n                        </div>\n                        <div className=\"ecuation\">\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{'\\gamma=frac{b}{2*m}'}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`\\gamma=frac{${props.inputs.const.data}}{2*${props.inputs.mass.data}}`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`\\gamma=${props.response.gamma}`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                        </div>\n\n                    </div>\n                    <div className=\"right-solution\">\n                        <div className=\"title\">\n                            <div className=\"title\">\n                                <h4>Ecuación de movimiento:</h4>\n                            </div>\n\n                            <div className=\"ecuation\">\n                                {props.response.type === 'subamortiguado' ?\n                                    <div>\n                                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Comparando Gamma con Frecuencia natural, como:</h5>\n                                        <div className=\"ecuation\">\n                                            <MathJax.Context input='ascii'>\n                                                <div>\n                                                    <MathJax.Node >{'\\gamma^2 < W_0^2'}</MathJax.Node>\n                                                </div>\n                                            </MathJax.Context>\n                                            <MathJax.Context input='ascii'>\n                                                <div>\n                                                    <MathJax.Node >{`${props.response.gamma}^2 < ${props.response.frecuenciaNatural}^2`}</MathJax.Node>\n                                                </div>\n                                            </MathJax.Context>\n                                        </div>\n                                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginTop: 20 }}>Al ser gamma menor que la frecuencia natural</h5>\n                                        <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}> es un sistema subamortiguado, por lo tanto su ecuación está dada por: </h5>\n                                        <div className=\"ecuation\">\n                                            <MathJax.Context input='ascii'>\n                                                <div>\n                                                    <MathJax.Node >{'θ(t)=c*e^(-\\gamma*t)* Cos (W*t+\\phi)'}</MathJax.Node>\n                                                </div>\n                                            </MathJax.Context>\n                                            <MathJax.Context input='ascii'>\n                                                <div>\n                                                    <MathJax.Node >{`θ(t)=${props.response.c}*e^(-${props.response.gamma}*t)* Cos (${props.response.ommega}*t+${props.response.phi})`}</MathJax.Node>\n                                                </div>\n                                            </MathJax.Context>\n\n                                        </div>\n                                    </div>\n                                    : props.response.type === 'amortiguado' ?\n                                        <div>\n                                            <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Comparando Gamma con Frecuencia natural, como:</h5>\n                                            <div className=\"ecuation\">\n                                                <MathJax.Context input='ascii'>\n                                                    <div>\n                                                        <MathJax.Node >{'\\gamma^2 = W_0^2'}</MathJax.Node>\n                                                    </div>\n                                                </MathJax.Context>\n                                                <MathJax.Context input='ascii'>\n                                                    <div>\n                                                        <MathJax.Node >{`${props.response.gamma}^2 = ${props.response.frecuenciaNatural}^2`}</MathJax.Node>\n                                                    </div>\n                                                </MathJax.Context>\n                                            </div>\n                                            <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Al ser iguales, es un sistema criticamente amortiguado, por lo tanto su ecuación está dada por: </h5>\n                                            <div className=\"ecuation\">\n                                                <MathJax.Context input='ascii'>\n                                                    <div>\n                                                        <MathJax.Node >{'θ(t)=(c1+c2*t)e^(-\\gamma*t)'}</MathJax.Node>\n                                                    </div>\n                                                </MathJax.Context>\n                                                <MathJax.Context input='ascii'>\n                                                    <div>\n                                                        <MathJax.Node >{`θ(t)=(${props.response.c1}+${props.response.c2}*t)e^(-${props.response.gamma}*t)`}</MathJax.Node>\n                                                    </div>\n                                                </MathJax.Context>\n\n                                            </div>\n                                        </div>\n                                        :\n                                        <div>\n                                            <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}>Comparando Gamma con Frecuencia natural, como:</h5>\n                                            <div className=\"ecuation\">\n                                                <MathJax.Context input='ascii'>\n                                                    <div>\n                                                        <MathJax.Node >{'\\gamma^2 > W_0^2'}</MathJax.Node>\n                                                    </div>\n                                                </MathJax.Context>\n                                                <MathJax.Context input='ascii'>\n                                                    <div>\n                                                        <MathJax.Node >{`${props.response.gamma}^2 > ${props.response.frecuenciaNatural}^2`}</MathJax.Node>\n                                                    </div>\n                                                </MathJax.Context>\n                                            </div>\n                                            <h5 style={{ color: '#234f4f', textAlign: 'left', marginTop: 20 }}>Al ser gamma mayor que la frecuencia natural</h5>\n                                            <h5 style={{ color: '#234f4f', textAlign: 'left', marginBottom: 20 }}> es un sistema sobreamortiguado, por lo tanto su ecuación está dada por: </h5>\n                                            <div className=\"ecuation\">\n                                                <MathJax.Context input='ascii'>\n                                                    <div>\n                                                        <MathJax.Node >{'θ(t)=c_1*e^(m_1*t)+ c_2*e^(m_2*t)'}</MathJax.Node>\n                                                    </div>\n                                                </MathJax.Context>\n                                                <MathJax.Context input='ascii'>\n                                                    <div>\n                                                        <MathJax.Node >{`θ(t)=${props.response.c1}*e^(${props.response.m1}*t)+ ${props.response.c2}*e^(${props.response.m2}*t)`}</MathJax.Node>\n                                                    </div>\n                                                </MathJax.Context>\n\n                                            </div>\n                                        </div>}\n                                <div className=\"title\">\n                                    <h4>Valor de la amplitud máxima</h4>\n                                </div>\n                                <div className=\"ecuation\">\n                                    <MathJax.Context input='ascii'>\n                                        <div>\n                                            <MathJax.Node >{`D = ${props.response.amplitudMaxima}`}</MathJax.Node>\n                                        </div>\n                                    </MathJax.Context>\n                                </div>\n                                <div className=\"title\">\n                                    <h4>Valor del angulo de desfase</h4>\n                                </div>\n                                <div className=\"ecuation\">\n                                    <MathJax.Context input='ascii'>\n                                        <div>\n                                            <MathJax.Node >{`\\delta= ${props.response.delta}`}</MathJax.Node>\n                                        </div>\n                                    </MathJax.Context>\n                                </div>\n                                <div className=\"title\">\n                                    <h4>Solución Total</h4>\n                                </div>\n                                <div className=\"ecuation\">\n                                    {props.response.type === 'subamortiguado' ?\n                                        <div>\n\n                                            <div className=\"ecuation\">\n                                                <MathJax.Context input='ascii'>\n                                                    <div>\n                                                        <MathJax.Node >{`θ(t)=${props.response.c}*e^(-${props.response.gamma}*t)* Cos (${props.response.ommega}*t+${props.response.phi}) +${props.response.amplitudMaxima}*Cos(${props.inputs.frecuenciaFuerza.data}*t - ${props.response.delta})`}</MathJax.Node>\n                                                    </div>\n                                                </MathJax.Context>\n\n                                            </div>\n                                        </div>\n                                        : props.response.type === 'amortiguado' ?\n                                            <div>\n\n                                                <div className=\"ecuation\">\n                                                    <MathJax.Context input='ascii'>\n                                                        <div>\n                                                            <MathJax.Node >{`θ(t)=(${props.response.c1}+${props.response.c2}*t)e^(-${props.response.gamma}*t)+${props.response.amplitudMaxima}*Cos(${props.inputs.frecuenciaFuerza.data}*t - ${props.response.delta})`}</MathJax.Node>\n                                                        </div>\n                                                    </MathJax.Context>\n\n                                                </div>\n                                            </div>\n                                            :\n                                            <div>\n                                                <div className=\"ecuation\">\n\n                                                    <MathJax.Context input='ascii'>\n                                                        <div>\n                                                            <MathJax.Node >{`θ(t)=${props.response.c1}*e^(${props.response.m1}*t)+ ${props.response.c2}*e^(${props.response.m2}*t)+${props.response.amplitudMaxima}*Cos(${props.inputs.frecuenciaFuerza.data}*t - ${props.response.delta})`}</MathJax.Node>\n                                                        </div>\n                                                    </MathJax.Context>\n\n                                                </div>\n                                            </div>}\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n\n                </div>\n            }\n        </div>\n    )\n}\n","import React,{useEffect} from 'react'\nimport Simple from './simple/index'\nimport Amortiguado from './amortiguado/index'\nimport Forzado from './forzado/index'\nimport './Blackboard.css'\nexport default function Blackboard(props) {\n    return (\n        <>\n        {props.type==='simple'?\n            <Simple type={props.type} inputs={props.inputs} response={props.response} energies={props.energies} />\n            :props.type==='amortiguado'?\n            <Amortiguado type={props.type} inputs={props.inputs} response={props.responseAmortiguado}/>\n            :\n            <Forzado type={props.type} inputs={props.inputs} response={props.responseForzado}/>\n        }</>\n    )\n}\n","export function pendulum(prmLongCuerda, prmGravedad, prmPosIni, prmVelIni) {\n    let varPhi;\n    let varTheta0\n    const varW = Math.sqrt(prmGravedad / prmLongCuerda);\n    const varT = 2 * Math.PI * Math.sqrt(prmLongCuerda / prmGravedad);\n    const varF = varW / (2 * Math.PI);\n    let varPhi1\n    let funcAmplitud\n\n    if (prmPosIni >= 0 && prmVelIni >= 0) {\n\n        if (prmPosIni > 0 && prmVelIni > 0) {\n\n            varPhi1 = Math.abs(Math.atan(prmVelIni / (prmPosIni * varW)))\n            varPhi = 2 * Math.PI - varPhi1; //4\n            varTheta0 = Math.abs(prmPosIni / Math.cos(varPhi))\n            funcAmplitud = 'cos'\n        }\n        if (prmPosIni == 0) {\n\n            varPhi1 = Math.PI / 2\n            varPhi = 2 * Math.PI - varPhi1; //4\n            varTheta0 = Math.abs(prmVelIni / (varW * Math.sin(varPhi)))\n            funcAmplitud = 'sen'\n        }\n        if (prmVelIni == 0) {\n\n            varPhi = 0\n            varTheta0 = prmPosIni\n            funcAmplitud = 'cos'\n        }\n    }\n    if (prmPosIni < 0 && prmVelIni >= 0) {\n\n        if (prmVelIni == 0) {\n            varPhi = 0\n            varTheta0 = Math.abs(prmPosIni)\n            funcAmplitud = 'cos'\n        }\n        else {\n            varPhi1 = Math.abs(Math.atan(prmVelIni / (-varW * prmPosIni)));\n            varPhi = Math.PI + varPhi1; //3\n            varTheta0 = Math.abs(prmPosIni / (Math.cos(varPhi)))\n            funcAmplitud = 'cos'\n        }\n\n    }\n    if (prmPosIni < 0 && prmVelIni < 0) {\n        varPhi1 = Math.abs(Math.atan(-(prmVelIni / (prmPosIni * varW))))\n        varPhi = Math.PI - varPhi1;//2\n        varTheta0 = Math.abs(prmPosIni / (Math.cos(varPhi)))\n        funcAmplitud = 'cos'\n    }\n    if (prmPosIni >= 0 && prmVelIni < 0) {\n\n        if (prmPosIni == 0) {\n            varPhi = Math.PI / 2;//1\n            varTheta0 = Math.abs(prmVelIni / (varW * Math.sin(varPhi)))\n            funcAmplitud = 'sen'\n\n        }\n        else {\n            varPhi = Math.abs(Math.atan(prmVelIni / (-varW * prmPosIni)))\n            varTheta0 = prmPosIni / Math.cos(varPhi)\n            funcAmplitud = 'cos'\n        }\n    }\n\n\n    return {\n        frecuenciaNatural: varW ? varW.toFixed(2) : varW,//rad/seg\n        periodo: varT ? varT.toFixed(2) : varT,//s\n        frecuencia: varF ? varF.toFixed(2) : varF,//hz\n        desfase: varPhi ? varPhi.toFixed(2) : varPhi,//rad\n        amplitud: varTheta0 ? degrees_to_radians(varTheta0).toFixed(2) : varTheta0,//ang,\n        funcAmplitud: funcAmplitud\n\n    }\n\n}\n\nexport function energies(prmMasa, prmGravedad, prmLongCuerda, prmPosIni, prmVelIni) {\n    let EP = prmMasa * prmGravedad * prmLongCuerda * ((prmPosIni ^ 2) / 2)\n    let EC = 1 / 2 * prmMasa * prmLongCuerda ^ 2 * prmVelIni ^ 2\n    return {\n        ep: EP,\n        ec: EC,\n        et: EP + EC\n    }\n}\n\nexport function amortiguado(prmLongCuerda, prmGravedad, prmPosIni, prmVelIni, prmMasa, prmB) {\n    const gamma = prmB / (2 * prmMasa);\n    const varW = Math.sqrt(prmGravedad / prmLongCuerda);\n    const gamma_2 = Math.pow(gamma, 2)\n    const varW_2 = Math.pow(varW, 2);\n    const varF = varW / (2 * Math.PI);\n    let type\n    let c1, c2, m1, m2, phi, c, phi1, ommega\n    ommega = Math.sqrt(varW_2 - gamma_2)\n    if (varW_2 == gamma_2) {\n        //CRITICAMENTE AMORTIGUADO\n        c1 = prmPosIni;\n        c2 = prmVelIni + (c1 * gamma)\n        type = 'amortiguado'\n    }\n    if (varW_2 < gamma_2) {\n        //SOBREAMORTIGUADO\n        type = 'sobreamortiguado'\n        m1 = -gamma + (Math.sqrt(gamma_2 - varW_2))\n        m2 = -gamma - (Math.sqrt(gamma_2 - varW_2))\n        c2 = (prmVelIni - (prmPosIni * m1)) / (m2 - m1)\n        c1 = prmPosIni - c2\n    }\n    if (varW_2 > gamma_2) {\n        //SUBAMORTIGUADO\n\n        type = 'subamortiguado'\n        if (prmPosIni >= 0 && prmVelIni >= 0) {\n            if (prmPosIni == 0) {\n                phi1 = Math.PI / 2;\n                phi = 2 * Math.PI - phi1;\n                c = Math.abs(prmVelIni / (ommega * Math.sin(phi)))\n            }\n            if (prmVelIni == 0) {\n                phi1 = Math.abs(Math.atan(-gamma / ommega))\n                phi = 2 * Math.PI - phi1;\n                c = Math.abs(prmPosIni / (Math.cos(phi)))\n            }\n            if (prmVelIni > 0 && prmPosIni > 0) {\n                phi1 = Math.abs(Math.atan((prmVelIni / (prmPosIni * -ommega)) + (-gamma / ommega)))\n                phi = 2 * Math.PI - phi1;\n                c = Math.abs(prmPosIni / (Math.cos(phi)))\n            }\n\n        }\n        if (prmVelIni >= 0 && prmPosIni < 0) {\n            if (prmVelIni == 0) {\n\n                phi1 = Math.abs(Math.atan(-gamma / ommega))\n                phi = Math.PI + phi1;\n                c = Math.abs(prmPosIni / (Math.cos(phi)))\n            }\n            else {\n                phi1 = Math.abs(Math.atan((prmVelIni / (prmPosIni * -ommega)) + (-gamma / ommega)))\n                phi = Math.PI + phi1;\n                c = Math.abs(prmPosIni / (Math.cos(phi)));\n            }\n        }\n        if (prmVelIni < 0 && prmPosIni < 0) {\n                phi1 = Math.abs(Math.atan((prmVelIni / (prmPosIni * -ommega)) + (-gamma / ommega)))\n                phi = Math.PI - phi1;\n                c = Math.abs(prmPosIni / (Math.cos(phi)));\n        }\n        if (prmPosIni >= 0 && prmVelIni < 0) {\n            if (prmPosIni == 0) {\n                phi = Math.PI / 2\n                c = Math.abs(prmVelIni / (ommega * Math.sin(phi)));\n            }\n            else {\n                phi = Math.abs(Math.atan((prmVelIni / (prmPosIni * -ommega)) + (-gamma / ommega)))\n                c = Math.abs(prmPosIni / (Math.cos(phi)));\n            }\n        }\n    }\n   \n    return {\n        type: type,\n        c1: c1 , //constantes arbitrarias\n        c2: c2 , //constantes arbitrarias\n        m1: m1 ,\n        m2: m2,\n        phi: phi ,\n        c: c,\n        frecuenciaNatural: varW,\n        frecuencia:  varF,\n        gamma: gamma,\n        ommega:  ommega\n    }\n}\nexport function forzado(prmLongCuerda, prmGravedad, prmPosIni, prmVelIni, prmMasa, prmB, prmF0, prmWf) {\n    let amplitudMaxima, delta;\n    if (prmB > 0) {\n        const { c1, c2, c, frecuenciaNatural, frecuencia, m1, m2, phi, gamma, type, ommega } = amortiguado(prmLongCuerda, prmGravedad, prmPosIni, prmVelIni, prmMasa, prmB);\n        const denominador = (Math.pow((Math.pow(frecuenciaNatural, 2) - Math.pow(prmWf, 2)), 2)) + (Math.pow(2 * gamma * prmWf), 2)\n        amplitudMaxima = (prmF0 / prmMasa) / (Math.sqrt(denominador));\n        delta = Math.atan((2 * gamma * prmWf) / (Math.pow(frecuenciaNatural, 2) - Math.pow(prmWf, 2)))\n        return {\n            type: type,\n            c1: c1, //constantes arbitrarias\n            c2: c2, //constantes arbitrarias\n            m1: m1,\n            m2: m2,\n            phi: phi,\n            c: c,\n            frecuenciaNatural,\n            frecuencia,\n            ommega,\n            gamma: gamma,\n            amplitudMaxima: amplitudMaxima ,\n            delta: delta,\n            label: 'amortiguado'\n\n        }\n    } else {\n        const { frecuenciaNatural, periodo, frecuencia, desfase, amplitud, funcAmplitud } = pendulum(prmLongCuerda, prmGravedad, prmPosIni, prmVelIni)\n        if (prmWf < frecuenciaNatural) {\n            const denominador = Math.pow(frecuenciaNatural, 2) - Math.pow(prmWf, 2)\n            amplitudMaxima = (prmF0 / prmMasa) / (denominador)\n            delta = 0\n        }\n        if (prmWf > frecuenciaNatural) {\n            const denominador = Math.pow(prmWf, 2) - (Math.pow(frecuenciaNatural, 2))\n            amplitudMaxima = (prmF0 / prmMasa) / (denominador)\n            delta = Math.PI\n        }\n\n        return {\n            frecuenciaNatural, periodo, frecuencia, desfase, amplitud, funcAmplitud,\n            amplitudMaxima: amplitudMaxima,\n            delta:  delta,\n            label: 'simple'\n        }\n    }\n}\n\nfunction degrees_to_radians(degrees) {\n    var pi = Math.PI;\n    return degrees * (pi / 180);\n}\n\n","import React, { useState, useEffect } from 'react'\nimport './Platform.css'\nimport SimplePendulumAnimation from './animations/SimplePendulumAnimation'\nimport Form from './inputs/Form'\nimport { ButtonGroup, Button } from '@material-ui/core'\nimport Checks from './checks/Checks'\nimport { MdSettings } from 'react-icons/md'\nimport Blackboard from './blackboard/Blackboard'\nimport { pendulum, energies, amortiguado, forzado } from '../../services/index'\n\nexport default function Platform() {\n    const [page, setPage] = useState('solution')\n    const [pageConfig, setPageConfig] = useState('data')\n    const [type, setType] = useState('simple')\n    const [configInputs, setConfigInputs] = useState({ length: { name: 'length', data: 1, checked: true, label: 'Longitud de la cuerda' }, gravity: { name: 'gravity', data: 9.8, checked: true, label: 'Valor de la gravedad' }, posInitial: { name: 'posInitial', data: 7, checked: true, label: 'Ángulo inicial' }, velInitial: { name: 'velInitial', data: 0, checked: true, label: 'Velocidad inicial' }, mass: { name: 'mass', data: 10, checked: true, label: 'Masa del objeto' } })\n    const [configInputsAmortiguado, setConfigInputsAmortiguado] = useState({ length: { name: 'length', data: 1, checked: true, label: 'Longitud de la cuerda' }, gravity: { name: 'gravity', data: 9.8, checked: true, label: 'Valor de la gravedad' }, posInitial: { name: 'posInitial', data: 7, checked: true, label: 'Ángulo inicial' }, velInitial: { name: 'velInitial', data: 0, checked: true, label: 'Velocidad inicial' }, mass: { name: 'mass', data: 10, checked: true, label: 'Masa del objeto' }, const: { name: 'const', data: 10, checked: true, label: 'Constante de amortiguamiento' } })\n    const [configInputsForzado, setConfigInputsForzado] = useState({ length: { name: 'length', data: 1, checked: true, label: 'Longitud de la cuerda' }, gravity: { name: 'gravity', data: 9.8, checked: true, label: 'Valor de la gravedad' }, posInitial: { name: 'posInitial', data: 7, checked: true, label: 'Ángulo inicial' }, velInitial: { name: 'velInitial', data: 0, checked: true, label: 'Velocidad inicial' }, mass: { name: 'mass', data: 10, checked: true, label: 'Masa del objeto' }, const: { name: 'const', data: 10, checked: true, label: 'Constante de amortiguamiento' }, fuerzaInicial: { name: 'fuerzaInicial', data: 1, checked: true, label: 'Fuerza Inicial' }, frecuenciaFuerza: { name: 'frecuenciaFuerza', data: 1, checked: true, label: 'Frecuencia Fuerza' } })\n\n    const [response, setResponse] = useState({})\n    const [responseAmortiguado, setResponseAmortiguado] = useState({})\n    const [responseForzado, setResponseForzado] = useState({})\n    const [responseEnergies, setResponseEnergies] = useState({})\n\n    const handleChecks = (name, value) => {\n        switch (type) {\n            case 'simple':\n                setConfigInputs({ ...configInputs, [name]: { ...configInputs[name], checked: value } })\n                break;\n            case 'amortiguado':\n                setConfigInputsAmortiguado({ ...configInputsAmortiguado, [name]: { ...configInputsAmortiguado[name], checked: value } })\n                break;\n            case 'forzado':\n                setConfigInputsForzado({ ...configInputsForzado, [name]: { ...configInputsForzado[name], checked: value } })\n                break;\n            default:\n                break;\n        }\n\n    }\n    const handleInputs = (name, value) => {\n\n        switch (type) {\n            case 'simple':\n                setConfigInputs({ ...configInputs, [name]: { ...configInputs[name], data: value } })\n                break;\n            case 'amortiguado':\n                setConfigInputsAmortiguado({ ...configInputsAmortiguado, [name]: { ...configInputsAmortiguado[name], data:name==='mass' && value<=0? 1:value } })\n                break;\n            case 'forzado':\n                setConfigInputsForzado({ ...configInputsForzado, [name]: { ...configInputsForzado[name], data: name==='mass' && value<=0?1:value } })\n                break;\n            default:\n                break;\n        }\n\n    }\n    const handleType = (name) => {\n      \n        setType(name)\n    }\n    useEffect(() => {\n\n        switch (type) {\n            case 'simple':\n                console.log('CASE simple')\n                setResponse(pendulum(configInputs.length.data, configInputs.gravity.data, configInputs.posInitial.data, configInputs.velInitial.data))\n                if (configInputs.mass.checked) {\n                    setResponseEnergies(energies(configInputs.mass.data, configInputs.gravity.data, configInputs.length.data, configInputs.posInitial.data, configInputs.velInitial.data))\n                }\n                break;\n            case 'amortiguado':\n                setResponseAmortiguado(amortiguado(configInputsAmortiguado.length.data, configInputsAmortiguado.gravity.data, configInputsAmortiguado.posInitial.data, configInputsAmortiguado.velInitial.data, configInputsAmortiguado.mass.data, configInputsAmortiguado.const.data))\n                break;\n            case 'forzado':\n                console.log('CASE FORZADO')\n                setResponseForzado(forzado(configInputsForzado.length.data, configInputsForzado.gravity.data, configInputsForzado.posInitial.data, configInputsForzado.velInitial.data, configInputsForzado.mass.data, configInputsForzado.const.data, configInputsForzado.fuerzaInicial.data, configInputsForzado.frecuenciaFuerza.data))\n                break;\n\n            default:\n                break;\n        }\n    }, [configInputs, configInputsAmortiguado, configInputsForzado])\n\n\n    return (\n        <div className=\"page-platform\">\n            <div className=\"platform-header\">\n                <div className=\"platform-tools\">\n                </div>\n                <div className=\"platform-draw\">\n                    <div className=\"button-group\">\n                        <ButtonGroup size='small' color='primary'>\n                            <Button variant={page === 'solution' ? 'contained' : null} onClick={() => setPage('solution')}>Solution</Button>\n                            <Button variant={page === 'graph' ? 'contained' : null} onClick={() => setPage('graph')}>Graphic</Button>\n                        </ButtonGroup>\n                    </div>\n                </div>\n                <div className=\"platform-inputs\">\n                </div>\n            </div>\n            <div className=\"platform-canvas\">\n                <div className=\"platform-tools\">\n                </div>\n                <div className=\"platform-draw\">\n                    {page === 'solution' ? <Blackboard type={type} inputs={type === 'simple' ? configInputs : type === 'amortiguado' ? configInputsAmortiguado : configInputsForzado} response={response} responseAmortiguado={responseAmortiguado} responseForzado={responseForzado} energies={responseEnergies} /> :\n                        <SimplePendulumAnimation mass={configInputs.mass.checked ? configInputs.mass.data + 'kg' : ''} angle={Math.abs(configInputs.posInitial.data)} length={configInputs.length.data} time={response.hasOwnProperty('periodo') ? response.periodo / 2 : 0} />\n                    }\n                </div>\n                <div className=\"platform-inputs\">\n                    <ButtonGroup size='small' color='primary'>\n                        <Button variant={pageConfig === 'data' ? 'contained' : null} onClick={() => setPageConfig('data')}>Data</Button>\n                        <Button variant={pageConfig === 'configuration' ? 'contained' : null} onClick={() => setPageConfig('configuration')}><MdSettings /></Button>\n                    </ButtonGroup>\n                    {pageConfig === 'data' ? <Form configInputs={type === 'simple' ? configInputs : type === 'amortiguado' ? configInputsAmortiguado : configInputsForzado} handleInputs={handleInputs} /> :\n                        <Checks handleType={handleType} type={type} configInputs={type === 'simple' ? configInputs : type === 'amortiguado' ? configInputsAmortiguado : configInputsForzado} handleChecks={handleChecks} />\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport Header from './components/header/Header'\nimport LandingPage from './pages/landing/Landing'\nimport Platform from './pages/platform/Platform'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#444E59'\n    },\n    secondary: {\n      main: '#50E3C4'\n    }\n  }\n});\nfunction App() {\n  return (\n\n    <div className=\"App\">\n      <MuiThemeProvider theme={theme}>\n        <Header />\n        <LandingPage />\n        <Platform />\n      </MuiThemeProvider>\n    </div >\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}